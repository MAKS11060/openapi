/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/achievements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List user achievements */
        get: operations["list_user_achievements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List animes */
        get: operations["list_anime"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        /** @description Show an anime */
        get: operations["get_anime"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        /** @description Show an anime roles */
        get: operations["get_anime_roles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/similar": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_anime_similar"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/related": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_anime_related"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/screenshots": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_anime_screenshots"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/franchise": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_anime_franchise"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/external_links": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_anime_external_links"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{id}/topics": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_anime_topics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["list_manga"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_roles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/similar": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_similar"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/related": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_related"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/screenshots": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_screenshots"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/franchise": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_franchise"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/external_links": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_external_links"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mangas/{id}/topics": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_manga_topics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["list_ranobe"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/roles": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_roles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/similar": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_similar"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/related": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_related"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/screenshots": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_screenshots"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/franchise": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_franchise"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/external_links": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_external_links"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ranobe/{id}/topics": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        get: operations["get_ranobe_topics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/characters/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["ID"];
            };
            cookie?: never;
        };
        /** @description Show a character */
        get: operations["get_characters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/characters/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Search characters */
        get: operations["find_characters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/people/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["ID"];
            };
            cookie?: never;
        };
        /** @description Show a person */
        get: operations["get_person"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/people/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Search people */
        get: operations["find_person"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constants/anime": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_constants_anime"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constants/manga": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_constants_manga"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constants/user_rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_constants_user_rate"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constants/club": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_constants_club"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constants/smileys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_constants_smileys"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/genres": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["list_genres"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/studios": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["list_studios"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users": {
        parameters: {
            query?: {
                page?: number;
                limit?: number;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_users"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["userID"];
            };
            cookie?: never;
        };
        get: operations["get_user"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/whoami": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_my_user"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user_rates/{type}/cleanup": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                type: "anime" | "manga";
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Delete entire user rates and history */
        delete: operations["delete_user_rates_cleanup"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user_rates/{type}/reset": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                type: "anime" | "manga";
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Reset all user scores to 0 */
        delete: operations["delete_user_rates_reset"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v2/user_rates": {
        parameters: {
            query?: {
                user_id?: components["schemas"]["userID"];
                target_id?: number;
                target_type?: "Anime" | "Mange";
                status?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List user rates */
        get: operations["list_user_rates"];
        put?: never;
        /** @description Create an user rate */
        post: operations["update_user_rates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v2/user_rates/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        /** @description Show an user rate */
        get: operations["list_user_rate"];
        /** @description Update an user rate */
        put: operations["update_user_rate"];
        post?: never;
        /** @description Destroy an user rate */
        delete: operations["delete_user_rate"];
        options?: never;
        head?: never;
        /** @description Update an user rate */
        patch: operations["edit_user_rate"];
        trace?: never;
    };
    "/api/v2/user_rates/{id}/increment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Increment episodes/chapters by 1 */
        post: operations["increment_user_rates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{anime_id}/videos": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                anime_id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        /** @description List videos */
        get: operations["get_video"];
        put?: never;
        /** @description Create a video */
        post: operations["add_video"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/animes/{anime_id}/videos/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                anime_id: components["schemas"]["animeID"];
                id: components["schemas"]["ID"];
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Destroy a video */
        delete: operations["delete_video"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        achievements: {
            user_id: components["schemas"]["userID"];
            id: components["schemas"]["ID"];
            neko_id: string;
            level: number;
            progress: number;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
        }[];
        anime: {
            id: components["schemas"]["animeID"];
            name: string;
            russian: string;
            image: {
                original: string;
                preview: string;
                x96: string;
                x48: string;
            };
            url: string;
            kind: string;
            score: string;
            status: string;
            episodes: number;
            episodes_aired: number;
            /** Format: date-time */
            aired_on: string;
            released_on?: string | null;
            rating: string;
            english: (string | null)[];
            japanese: (string | null)[];
            synonyms: string[];
            license_name_ru?: string | null;
            duration: number;
            description?: string | null;
            description_html: string;
            description_source?: string | null;
            franchise?: string | null;
            favoured: boolean;
            anons: boolean;
            ongoing: boolean;
            thread_id: number;
            topic_id: number;
            myanimelist_id: number;
            rates_scores_stats: unknown[];
            rates_statuses_stats: unknown[];
            /** Format: date-time */
            updated_at: string;
            next_episode_at?: string | null;
            fansubbers: unknown[];
            fandubbers: unknown[];
            licensors: unknown[];
            genres: unknown[];
            studios: unknown[];
            videos: unknown[];
            screenshots: unknown[];
            user_rate?: number | null;
        };
        animeID: number;
        animeList: {
            id: components["schemas"]["animeID"];
            name: string;
            russian: string;
            image: {
                original: string;
                preview: string;
                x96: string;
                x48: string;
            };
            url: string;
            kind: string;
            score: string;
            status: string;
            episodes: number;
            episodes_aired: number;
            /** Format: date-time */
            aired_on: string;
            released_on?: string | null;
        }[];
        animeSearchQuery: {
            page?: number;
            limit?: number;
            /** @enum {string} */
            order?: "id" | "id_desc" | "ranked" | "kind" | "popularity" | "name" | "aired_on" | "episodes" | "status" | "random" | "created_at" | "created_at_desc";
            /** @enum {string} */
            kind?: "tv" | "movie" | "ova" | "ona" | "special" | "tv_special" | "music" | "pv" | "cm" | "tv_13" | "tv_24" | "tv_48";
            /** @enum {string} */
            status?: "anons" | "ongoing" | "released";
            season?: string;
            score?: number;
            /** @enum {string} */
            duration?: "S" | "D" | "F";
            /** @enum {string} */
            rating?: "none" | "g" | "pg" | "pg_13" | "r" | "r_plus" | "rx";
            genre?: string;
            genre_v2?: string;
            studio?: string;
            franchise?: string;
            /** @enum {string} */
            censored?: "true" | "false";
            /** @enum {string} */
            mylist?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
            ids?: string;
            exclude_ids?: string;
            search?: string;
        };
        character: {
            id: components["schemas"]["ID"];
            name: string;
            russian: string;
            image: {
                original: string;
                preview: string;
                x96: string;
                x48: string;
            };
            url: string;
        };
        characterFull: {
            id: components["schemas"]["ID"];
            name: string;
            russian: string;
            image: {
                original: string;
                preview: string;
                x96: string;
                x48: string;
            };
            url: string;
            altname: string | null;
            japanese: string | null;
            description: string | null;
            description_html: string | null;
            description_source: string | null;
            favoured: boolean;
            thread_id: components["schemas"]["ID"];
            topic_id: components["schemas"]["ID"];
            /** Format: date-time */
            updated_at: string;
            seyu: components["schemas"]["character"][];
            animes: {
                id: components["schemas"]["animeID"];
                name: string;
                russian: string;
                image: {
                    original: string;
                    preview: string;
                    x96: string;
                    x48: string;
                };
                url: string;
                kind: string;
                score: string;
                status: string;
                episodes: number;
                episodes_aired: number;
                /** Format: date-time */
                aired_on: string;
                released_on?: string | null;
                roles: string[];
                role: string;
            }[];
            mangas: {
                id: components["schemas"]["animeID"];
                name: string;
                russian: string;
                image: {
                    original: string;
                    preview: string;
                    x96: string;
                    x48: string;
                };
                url: string;
                kind: string;
                score: string;
                status: string;
                episodes: number;
                episodes_aired: number;
                /** Format: date-time */
                aired_on: string;
                released_on?: string | null;
                roles: string[];
                role: string;
            }[];
        };
        externalLinks: {
            id: components["schemas"]["ID"] | null;
            kind: string;
            url: string;
            source: string;
            entry_id: components["schemas"]["ID"];
            entry_type: string;
            created_at: string | null;
            updated_at: string | null;
            imported_at: string | null;
        }[];
        franchise: {
            current_id: components["schemas"]["animeID"];
            links: {
                id: components["schemas"]["ID"];
                source_id: components["schemas"]["ID"];
                target_id: components["schemas"]["ID"];
                source: number;
                target: number;
                weight: number;
                relation: string;
            }[];
            nodes: {
                id: components["schemas"]["ID"];
                date: number;
                name: string;
                image_url: string;
                url: string;
                year: number | null;
                kind: string;
                weight: number;
            }[];
        };
        genres: {
            id: number;
            name: string;
            russian: string | null;
            /** @enum {string} */
            kind: "anime" | "manga";
        }[];
        ID: number;
        relatedList: {
            relation: string;
            relation_russian: string;
            anime: {
                id: components["schemas"]["animeID"];
                name: string;
                russian: string;
                image: {
                    original: string;
                    preview: string;
                    x96: string;
                    x48: string;
                };
                url: string;
                kind: string;
                score: string;
                status: string;
                episodes: number;
                episodes_aired: number;
                /** Format: date-time */
                aired_on: string;
                released_on?: string | null;
            };
            manga: Record<string, never>;
        }[];
        roles: {
            roles: string[];
            roles_russian: string[];
            character: components["schemas"]["character"] | null;
            person: components["schemas"]["character"] | null;
        }[];
        screenshots: {
            original: string;
            preview: string;
        }[];
        similar: {
            id: components["schemas"]["animeID"];
            name: string;
            russian: string;
            image: {
                original: string;
                preview: string;
                x96: string;
                x48: string;
            };
            url: string;
            kind: string;
            score: string;
            status: string;
            episodes: number;
            episodes_aired: number;
            /** Format: date-time */
            aired_on: string;
            released_on?: string | null;
        }[];
        studios: {
            id: number;
            name: string;
            filtered_name: string;
            real: boolean;
            image: string | null;
        }[];
        topics: {
            id: components["schemas"]["ID"];
            topic_title: string;
            body: string;
            html_body: string;
            html_footer: string;
            /** Format: date-time */
            created_at: string;
            comments_count: number;
            forum: {
                id: number;
                position: number;
                name: string;
                permalink: string;
                url: string;
            };
            user: components["schemas"]["user"];
            type: string;
            linked_id: components["schemas"]["ID"];
            linked_type: string;
            linked: {
                id: components["schemas"]["animeID"];
                name: string;
                russian: string;
                image: {
                    original: string;
                    preview: string;
                    x96: string;
                    x48: string;
                };
                url: string;
                kind: string;
                score: string;
                status: string;
                episodes: number;
                episodes_aired: number;
                /** Format: date-time */
                aired_on: string;
                released_on?: string | null;
            };
            viewed: boolean;
            last_comment_viewed: unknown | null;
            event: string | null;
            episode: number | null;
        }[];
        topicsQuery: {
            page?: number;
            limit?: number;
            /** @enum {string} */
            kind?: "anons" | "ongoing" | "released" | "episode";
            episodes?: number;
        };
        UnauthorizedSchema: {
            error: string;
            error_description: string;
            state: string;
        };
        user: {
            id: components["schemas"]["userID"];
            nickname: string;
            avatar: string;
            image: {
                [key: string]: string;
            };
            /** Format: date-time */
            last_online_at: string;
            url: string;
        };
        userID: number;
        userInfo: {
            id: components["schemas"]["userID"];
            nickname: string;
            avatar: string;
            image: {
                [key: string]: string;
            };
            /** Format: date-time */
            last_online_at: string;
            url: string;
            name: string | null;
            sex: string | null;
            full_years: number | null;
            last_online: string | null;
            website: string | null;
        };
        userRates: {
            id: number;
            user_id: components["schemas"]["userID"];
            target_id: number;
            /** @enum {string} */
            target_type: "Anime" | "Mange";
            score: number;
            /** @enum {string} */
            status: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
            rewatches: number;
            episodes: number;
            volumes: number;
            chapters: number;
            text: string | null;
            text_html: string;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
        };
        userRatesCreateParams: {
            user_id: components["schemas"]["userID"];
            target_id: number;
            /** @enum {string} */
            target_type: "Anime" | "Mange";
            /** @enum {string} */
            status?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
            score?: number;
            chapters?: number;
            episodes?: number;
            volumes?: number;
            rewatches?: number;
            text?: string | null;
        };
        userRatesList: components["schemas"]["userRates"][];
        userRatesQuery: {
            user_id: components["schemas"]["userID"];
            target_id: number;
            /** @enum {string} */
            target_type: "Anime" | "Mange";
            /** @enum {string} */
            status: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
            page?: number;
            limit?: number;
        };
        userRatesUpdateParams: {
            /** @enum {string} */
            status?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
            score?: number;
            chapters?: number;
            episodes?: number;
            volumes?: number;
            rewatches?: number;
            text?: string | null;
        };
        users: components["schemas"]["user"][];
        usersSearchQuery: {
            page?: number;
            limit?: number;
            search?: string;
        };
        video: {
            id: components["schemas"]["ID"];
            url: string;
            image_url: string;
            player_url: string;
            name: string | null;
            /** @enum {string} */
            kind: "pv" | "character_trailer" | "cm" | "op" | "ed" | "op_ed_clip" | "clip" | "other" | "episode_preview";
            /** @enum {string} */
            hosting: "youtube" | "youtube_shorts" | "rutube" | "rutube_shorts" | "vk" | "ok" | "coub" | "vimeo" | "sibnet" | "yandex" | "streamable" | "smotret_anime" | "myvi" | "youmite" | "viuly" | "mediafile";
        };
        videos: components["schemas"]["video"][];
    };
    responses: {
        /** @description The given parameters could not be parsed */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": unknown;
            };
        };
        /** @description Authentication failed */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["UnauthorizedSchema"];
            };
        };
        /** @description Access denied */
        Forbidden: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": Record<string, never>;
            };
        };
        /** @description Not Found */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": Record<string, never>;
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    list_user_achievements: {
        parameters: {
            query: {
                user_id: components["schemas"]["userID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["achievements"];
                };
            };
            /** @description Response 4XX */
            "4XX": {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_anime: {
        parameters: {
            query?: {
                page?: number;
                limit?: number;
                order?: "id" | "id_desc" | "ranked" | "kind" | "popularity" | "name" | "aired_on" | "episodes" | "status" | "random" | "created_at" | "created_at_desc";
                kind?: "tv" | "movie" | "ova" | "ona" | "special" | "tv_special" | "music" | "pv" | "cm" | "tv_13" | "tv_24" | "tv_48";
                status?: "anons" | "ongoing" | "released";
                season?: string;
                score?: number;
                duration?: "S" | "D" | "F";
                rating?: "none" | "g" | "pg" | "pg_13" | "r" | "r_plus" | "rx";
                genre?: string;
                genre_v2?: string;
                studio?: string;
                franchise?: string;
                censored?: "true" | "false";
                mylist?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
                ids?: string;
                exclude_ids?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["animeList"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["anime"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_roles: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["roles"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_similar: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["similar"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_related: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["relatedList"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_screenshots: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["screenshots"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_franchise: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["franchise"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_external_links: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalLinks"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_anime_topics: {
        parameters: {
            query?: {
                page?: number;
                limit?: number;
                kind?: "anons" | "ongoing" | "released" | "episode";
                episodes?: number;
            };
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["topics"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    list_manga: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_roles: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_similar: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_related: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_screenshots: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_franchise: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_external_links: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_manga_topics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    list_ranobe: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_roles: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_similar: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_related: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_screenshots: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_franchise: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_external_links: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_ranobe_topics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_characters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["ID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["characterFull"];
                };
            };
        };
    };
    find_characters: {
        parameters: {
            query?: {
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["character"];
                };
            };
        };
    };
    get_person: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["ID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    find_person: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: never;
    };
    get_constants_anime: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        kind: string[];
                        status: string[];
                    };
                };
            };
        };
    };
    get_constants_manga: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        kind: string[];
                        status: string[];
                    };
                };
            };
        };
    };
    get_constants_user_rate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status: string[];
                    };
                };
            };
        };
    };
    get_constants_club: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        join_policy: string[];
                        comment_policy: string[];
                        image_upload_policy: string[];
                    };
                };
            };
        };
    };
    get_constants_smileys: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        bbcode: string;
                        path: string;
                    }[];
                };
            };
        };
    };
    list_genres: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List genres */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["genres"];
                };
            };
        };
    };
    list_studios: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List studios */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["studios"];
                };
            };
        };
    };
    get_users: {
        parameters: {
            query?: {
                page?: number;
                limit?: number;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List users */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users"];
                };
            };
        };
    };
    get_user: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: components["schemas"]["userID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show an user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userInfo"];
                };
            };
        };
    };
    get_my_user: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Show an user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["user"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    delete_user_rates_cleanup: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                type: "anime" | "manga";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        notice: string;
                    };
                };
            };
        };
    };
    delete_user_rates_reset: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                type: "anime" | "manga";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        notice: string;
                    };
                };
            };
        };
    };
    list_user_rates: {
        parameters: {
            query?: {
                user_id?: components["schemas"]["userID"];
                target_id?: number;
                target_type?: "Anime" | "Mange";
                status?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userRatesList"];
                };
            };
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    update_user_rates: {
        parameters: {
            query?: {
                user_id?: components["schemas"]["userID"];
                target_id?: number;
                target_type?: "Anime" | "Mange";
                status?: "planned" | "watching" | "rewatching" | "completed" | "on_hold" | "dropped";
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["userRatesCreateParams"];
            };
        };
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userRates"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    list_user_rate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userRates"];
                };
            };
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    update_user_rate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["userRatesUpdateParams"];
            };
        };
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userRates"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    delete_user_rate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 204 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    edit_user_rate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["userRatesUpdateParams"];
            };
        };
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userRates"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    increment_user_rates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 201 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["userRates"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    get_video: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                anime_id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["videos"];
                };
            };
        };
    };
    add_video: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                anime_id: components["schemas"]["animeID"];
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @enum {string} */
                    kind: "pv" | "character_trailer" | "cm" | "op" | "ed" | "op_ed_clip" | "clip" | "other" | "episode_preview";
                    name: string | null;
                    url: string;
                };
            };
        };
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["video"];
                };
            };
        };
    };
    delete_video: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                anime_id: components["schemas"]["animeID"];
                id: components["schemas"]["ID"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
