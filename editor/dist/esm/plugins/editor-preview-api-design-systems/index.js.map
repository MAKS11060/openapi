{"version":3,"file":"plugins/editor-preview-api-design-systems/index.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../external module \"short-unique-id\"","../external module \"@swagger-api/apidom-parser-adapter-api-design-systems-json\"","../external module \"@swagger-api/apidom-parser-adapter-api-design-systems-yaml\"","plugins/editor-preview-api-design-systems/actions.js","plugins/editor-preview-api-design-systems/wrap-actions.js","utils/create-safe-action-wrapper.js","../external module \"reselect\"","../external module \"@swagger-api/apidom-core\"","../external module \"@swagger-api/apidom-ns-api-design-systems\"","plugins/editor-preview-api-design-systems/namespace.js","plugins/editor-preview-api-design-systems/reducers.js","plugins/editor-preview-api-design-systems/selectors.js","../external module \"react/jsx-runtime.js\"","plugins/editor-preview-api-design-systems/components/Main.jsx","plugins/editor-preview-api-design-systems/components/Info.jsx","plugins/editor-preview-api-design-systems/components/Principles.jsx","plugins/editor-preview-api-design-systems/components/Principle.jsx","plugins/editor-preview-api-design-systems/components/Standards.jsx","plugins/editor-preview-api-design-systems/components/Standard.jsx","plugins/editor-preview-api-design-systems/components/Scenarios.jsx","plugins/editor-preview-api-design-systems/components/Scenario.jsx","plugins/editor-preview-api-design-systems/components/Requirement.jsx","../external module \"react\"","plugins/editor-preview-api-design-systems/components/EditorPreviewAPIDesignSystems.jsx","plugins/editor-preview-api-design-systems/components/ParseErrors.jsx","plugins/editor-preview-api-design-systems/wrap-components/EditorPreviewWrapper.jsx","plugins/editor-preview-api-design-systems/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE_short_unique_id_298b54bb__[\"default\"] });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"parse\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_parser_adapter_api_design_systems_json_1adf0e52__.parse });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"parse\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_parser_adapter_api_design_systems_yaml_bdee7436__.parse });","import ShortUniqueId from 'short-unique-id';\nimport { parse as parseJSON } from '@swagger-api/apidom-parser-adapter-api-design-systems-json';\nimport { parse as parseYAML } from '@swagger-api/apidom-parser-adapter-api-design-systems-yaml';\n\n/**\n * Action types.\n */\n\nexport const EDITOR_PREVIEW_ADS_PREVIEW_UNMOUNTED =\n  'editor_preview_api_design_systems_preview_unmounted';\n\nexport const EDITOR_PREVIEW_ADS_PARSE_STARTED = 'editor_preview_api_design_systems_parse_started';\nexport const EDITOR_PREVIEW_ADS_PARSE_SUCCESS = 'editor_preview_api_design_systems_parse_success';\nexport const EDITOR_PREVIEW_ADS_PARSE_FAILURE = 'editor_preview_api_design_systems_parse_failure';\n\n/**\n * Action creators.\n */\n\nexport const previewUnmounted = () => ({\n  type: EDITOR_PREVIEW_ADS_PREVIEW_UNMOUNTED,\n});\n\nexport const parseStarted = ({ content, contentType, requestId }) => ({\n  type: EDITOR_PREVIEW_ADS_PARSE_STARTED,\n  payload: content,\n  meta: {\n    contentType,\n    requestId,\n  },\n});\n\nexport const parseSuccess = ({ parseResult, content, contentType, requestId }) => ({\n  type: EDITOR_PREVIEW_ADS_PARSE_SUCCESS,\n  payload: parseResult,\n  meta: { content, contentType, requestId },\n});\n\nexport const parseFailure = ({ error, content, contentType, requestId }) => ({\n  type: EDITOR_PREVIEW_ADS_PARSE_FAILURE,\n  payload: error,\n  error: true,\n  meta: { content, contentType, requestId },\n});\n\n/**\n * Async thunks.\n */\n\nexport const parse = ({ content, contentType, parserOptions = {} }) => {\n  const uid = new ShortUniqueId({ length: 10 });\n\n  return async (system) => {\n    const { editorPreviewADSActions } = system;\n    const requestId = uid();\n\n    editorPreviewADSActions.parseStarted({ content, contentType, requestId });\n\n    const parseAPIDesignSystemsDefinition = contentType.includes('+json') ? parseJSON : parseYAML;\n\n    try {\n      const parseResult = await parseAPIDesignSystemsDefinition(content, parserOptions);\n      editorPreviewADSActions.parseSuccess({ parseResult, content, contentType, requestId });\n    } catch (error) {\n      editorPreviewADSActions.parseFailure({ error, content, contentType, requestId });\n    }\n  };\n};\n","import createSafeActionWrapper from '../../utils/create-safe-action-wrapper.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const detectContentTypeSuccess = createSafeActionWrapper(\n  (oriAction, system) =>\n    ({ content }) => {\n      const { editorSelectors, editorPreviewADSActions } = system;\n\n      if (editorSelectors.selectIsContentTypeAPIDesignSystems()) {\n        const contentType = editorSelectors.selectContentType();\n        const parserOptions = {};\n\n        editorPreviewADSActions.parse({ content, contentType, parserOptions });\n      }\n    }\n);\n","/**\n * Creates action wrapper that avoids double dispatch.\n *\n * @param wrapper\n * @returns {function(*, *): function(...[*]): (*)}\n */\nconst createSafeActionWrapper = (wrapper) => {\n  let lastFSA = null; // Flux Standard Action(FSA): action objects emitted through redux\n\n  return (origAction, system) =>\n    (...args) => {\n      const fsa = origAction(...args);\n\n      if (fsa === lastFSA) {\n        return fsa;\n      }\n\n      wrapper(origAction, system)(...args);\n\n      lastFSA = fsa;\n\n      return fsa;\n    };\n};\n\nexport default createSafeActionWrapper;\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createSelector\"]: () => __WEBPACK_EXTERNAL_MODULE_reselect__.createSelector });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createNamespace\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__.createNamespace, [\"from\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__.from, [\"isArrayElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__.isArrayElement, [\"isStringElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__.isStringElement, [\"toString\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__.toString, [\"toValue\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__.toValue });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__[\"default\"], [\"isInfoElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isInfoElement, [\"isMainElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isMainElement, [\"isPrincipleElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isPrincipleElement, [\"isRequirementLevelElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isRequirementLevelElement, [\"isScenarioElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isScenarioElement, [\"isStandardElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isStandardElement, [\"isStandardIdentifierElement\"]: () => __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__.isStandardIdentifierElement });","import { createNamespace } from '@swagger-api/apidom-core';\nimport namespace from '@swagger-api/apidom-ns-api-design-systems';\n\nconst apiDesignSystemsNamespace = createNamespace(namespace);\n\nexport default apiDesignSystemsNamespace;\n","import { toString } from '@swagger-api/apidom-core';\n\nimport apiDesignSystemsNamespace from './namespace.js';\nimport {\n  EDITOR_PREVIEW_ADS_PREVIEW_UNMOUNTED,\n  EDITOR_PREVIEW_ADS_PARSE_STARTED,\n  EDITOR_PREVIEW_ADS_PARSE_SUCCESS,\n  EDITOR_PREVIEW_ADS_PARSE_FAILURE,\n} from './actions.js';\n\nexport const IDLE_STATUS = 'idle';\nexport const PARSING_STATUS = 'parsing';\nexport const SUCCESS_STATUS = 'success';\nexport const FAILURE_STATUS = 'failure';\n\nexport const initialState = {\n  parseStatus: IDLE_STATUS,\n  parseRequestId: null,\n  parseResult: null,\n  parseError: null,\n};\n\n/**\n * Case reducers modeled as finite state machine.\n */\n\nconst previewUnmountedReducer = (state) => {\n  const { parseStatus, parseRequestId, parseResult, parseErrors } = initialState;\n\n  return state.merge({\n    parseStatus,\n    parseRequestId,\n    parseResult,\n    parseErrors,\n  });\n};\n\nconst parseStartedReducer = (state, action) => {\n  return state.merge({\n    parseStatus: PARSING_STATUS,\n    parseRequestId: action.meta.requestId,\n  });\n};\n\nconst parseSuccessReducer = (state, action) => {\n  const status = state.get('parseStatus') || IDLE_STATUS;\n  const requestId = state.get('parseRequestId');\n\n  if (status === PARSING_STATUS && requestId === action.meta.requestId) {\n    return state.merge({\n      parseStatus: SUCCESS_STATUS,\n      parseRequestId: null,\n      parseResult: toString(action.payload, apiDesignSystemsNamespace),\n      parseErrors: null,\n    });\n  }\n\n  return state;\n};\n\nconst parseFailureReducer = (state, action) => {\n  const status = state.get('parseStatus') || IDLE_STATUS;\n  const requestId = state.get('parseRequestId');\n\n  if (status === PARSING_STATUS && requestId === action.meta.requestId) {\n    return state.merge({\n      parseStatus: FAILURE_STATUS,\n      parseRequestId: null,\n      parseResult: null,\n      parseErrors: action.payload,\n    });\n  }\n\n  return state;\n};\n\n/**\n * Root reducer for this plugin.\n */\n\nconst reducers = {\n  [EDITOR_PREVIEW_ADS_PREVIEW_UNMOUNTED]: previewUnmountedReducer,\n\n  [EDITOR_PREVIEW_ADS_PARSE_STARTED]: parseStartedReducer,\n  [EDITOR_PREVIEW_ADS_PARSE_SUCCESS]: parseSuccessReducer,\n  [EDITOR_PREVIEW_ADS_PARSE_FAILURE]: parseFailureReducer,\n};\n\nexport default reducers;\n","import { createSelector } from 'reselect';\nimport { from, toValue, isStringElement, isArrayElement } from '@swagger-api/apidom-core';\nimport {\n  isMainElement,\n  isInfoElement,\n  isPrincipleElement,\n  isStandardElement,\n  isScenarioElement,\n  isStandardIdentifierElement,\n  isRequirementLevelElement,\n} from '@swagger-api/apidom-ns-api-design-systems';\n\nimport apiDesignSystemsNamespace from './namespace.js';\nimport { initialState, FAILURE_STATUS, PARSING_STATUS, SUCCESS_STATUS } from './reducers.js';\n\nconst selectState = (state) => state;\n\nexport const selectParseResult = createSelector(selectState, (state) => {\n  const parseResult = state.get('parseResult', initialState.parseResult);\n\n  if (typeof parseResult !== 'string') {\n    return null;\n  }\n\n  return from(parseResult, apiDesignSystemsNamespace);\n});\n\nexport const selectParseError = createSelector(selectState, (state) => {\n  return state.get('parseError', initialState.parseResult);\n});\n\nexport const selectParseStatus = (state) => state.get('parseStatus') || initialState.parseStatus;\n\nexport const selectIsParseInProgress = createSelector(\n  selectParseStatus,\n  selectParseResult,\n  selectParseError,\n  (parseStatus, parseResult, parseErrors) => {\n    return parseStatus === PARSING_STATUS && parseResult === null && parseErrors === null;\n  }\n);\n\nexport const selectIsParseSuccess = createSelector(\n  selectParseStatus,\n  (parseStatus) => parseStatus === SUCCESS_STATUS\n);\n\nexport const selectIsParseFailure = createSelector(\n  selectParseStatus,\n  (parseStatus) => parseStatus === FAILURE_STATUS\n);\n\nexport const selectMainElement = createSelector(selectParseResult, (parseResult) => {\n  if (parseResult === null) return null;\n\n  const { result } = parseResult;\n\n  return isMainElement(result) ? result : null;\n});\n\nexport const selectVersion = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return null;\n\n  const { version } = mainElement;\n\n  return isStringElement(version) ? toValue(version) : '2021-05-07';\n});\n\nexport const selectInfo = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return null;\n\n  const { info } = mainElement;\n\n  return isInfoElement(info) ? toValue(info) : null;\n});\n\nexport const selectPrinciplesCount = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return null;\n\n  const { principles } = mainElement;\n\n  return isArrayElement(principles) ? principles.length : 0;\n});\n\nexport const selectStandardsCount = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return null;\n\n  const { standards } = mainElement;\n\n  return isArrayElement(standards) ? standards.length : 0;\n});\n\nexport const selectScenariosCount = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return null;\n\n  const { scenarios } = mainElement;\n\n  return isArrayElement(scenarios) ? scenarios.length : 0;\n});\n\nexport const selectPrinciples = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return [];\n\n  const { principles } = mainElement;\n\n  if (!isArrayElement(principles)) return [];\n\n  return principles.filter(isPrincipleElement).toValue();\n});\n\nexport const selectStandards = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return [];\n\n  const { standards } = mainElement;\n\n  if (!isArrayElement(standards)) return [];\n\n  return standards.filter(isStandardElement).toValue();\n});\n\nexport const selectScenarios = createSelector(selectMainElement, (mainElement) => {\n  if (mainElement === null) return [];\n\n  const { scenarios } = mainElement;\n\n  if (!isArrayElement(scenarios)) return [];\n\n  return scenarios.filter(isScenarioElement).elements;\n});\n\nexport const selectStandardIdentifier = (state, { standardIdentifier }) => {\n  if (!isStandardIdentifierElement(standardIdentifier)) return '[]';\n\n  return `[${String(toValue(standardIdentifier)).replaceAll(',', ' > ')}]`;\n};\n\nexport const selectScenarioDescription = (state, { scenarioElement }) => {\n  if (!isScenarioElement(scenarioElement)) return '';\n  if (!isStringElement(scenarioElement.description)) return '';\n\n  return toValue(scenarioElement.description);\n};\n\nexport const selectScenarioRequirements = (state, { scenarioElement }) => {\n  if (!isScenarioElement(scenarioElement)) return [];\n  if (!isArrayElement(scenarioElement.then)) return [];\n\n  return scenarioElement.then.content;\n};\n\nexport const selectRequirementLevel = (state, { requirementElement }) => {\n  if (!isRequirementLevelElement(requirementElement.level)) return 'unknown';\n\n  return toValue(requirementElement.level);\n};\n\nexport const selectRequirementValues = (state, { requirementElement }) => {\n  if (!isArrayElement(requirementElement.values)) return 'unknown';\n\n  return String(toValue(requirementElement.values)).replaceAll(',', ', ');\n};\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"jsx\"]: () => __WEBPACK_EXTERNAL_MODULE_react_jsx_runtime_js_fc12ce1a__.jsx, [\"jsxs\"]: () => __WEBPACK_EXTERNAL_MODULE_react_jsx_runtime_js_fc12ce1a__.jsxs });","import PropTypes from 'prop-types';\n\nconst Main = ({ getComponent }) => {\n  const Info = getComponent('ADSInfo', true);\n  const Principles = getComponent('ADSPrinciples', true);\n  const Standards = getComponent('ADSStandards', true);\n  const Scenarios = getComponent('ADSScenarios', true);\n\n  return (\n    <section className=\"swagger-ui swagger-container\">\n      <div className=\"swagger-ui\">\n        <div className=\"information-container wrapper\">\n          <section className=\"block col-12\">\n            <Info />\n            <Principles />\n            <Standards />\n            <Scenarios />\n            <br />\n          </section>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nMain.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import PropTypes from 'prop-types';\n\nconst Info = ({ editorPreviewADSSelectors }) => {\n  const version = editorPreviewADSSelectors.selectVersion();\n  const info = editorPreviewADSSelectors.selectInfo();\n  const principles = editorPreviewADSSelectors.selectPrinciplesCount();\n  const standards = editorPreviewADSSelectors.selectStandardsCount();\n  const scenarios = editorPreviewADSSelectors.selectScenariosCount();\n\n  if (info === null) return null;\n\n  return (\n    <div className=\"info\">\n      <hgroup className=\"main\">\n        <h2 className=\"title\">\n          {info.title}\n          <span>\n            <small>\n              <pre className=\"version\">{version}</pre>\n            </small>\n            <small className=\"version-stamp\">\n              <pre className=\"version\">ADS</pre>\n            </small>\n          </span>\n        </h2>\n      </hgroup>\n      <hgroup className=\"main title\">\n        <span>\n          <small className=\"summary-pill\">\n            <pre className=\"version\"> {principles} Principles</pre>\n          </small>\n          <small className=\"summary-pill\">\n            <pre className=\"version\"> {standards} Standards</pre>\n          </small>\n          <small className=\"summary-pill\">\n            <pre className=\"version\"> {scenarios} Scenarios</pre>\n          </small>\n        </span>\n      </hgroup>\n\n      <div className=\"description\">\n        <div className=\"renderedMarkdown\">\n          <p>{info.description}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = {\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectVersion: PropTypes.func.isRequired,\n    selectInfo: PropTypes.func.isRequired,\n    selectPrinciplesCount: PropTypes.func.isRequired,\n    selectStandardsCount: PropTypes.func.isRequired,\n    selectScenariosCount: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Info;\n","import PropTypes from 'prop-types';\n\nconst Principles = ({ editorPreviewADSSelectors, getComponent }) => {\n  const principlesCount = editorPreviewADSSelectors.selectPrinciplesCount();\n  const principles = editorPreviewADSSelectors.selectPrinciples();\n  const Principle = getComponent('ADSPrinciple');\n\n  return (\n    <div className=\"no-margin\">\n      <div className=\"opblock opblock-post is-open\">\n        <div className=\"opblock-summary opblock-summary-post\">\n          <span\n            className=\"opblock-summary-method\"\n            style={{ paddingLeft: '6px', paddingRight: '6px' }}\n          >\n            {principlesCount} Principles\n          </span>\n        </div>\n        <div className=\"no-margin\">\n          <div className=\"opblock-body\">\n            <div className=\"opblock-description-wrapper\">\n              <div className=\"opblock-description\">\n                <div className=\"markdown\">\n                  <p>Principles guide how decisions in API design and delivery should be made.</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"opblock-section\">\n              <div className=\"parameters-container\">\n                <div className=\"table-container\">\n                  <table className=\"model ads-principles\">\n                    <thead>\n                      <tr>\n                        <th className=\"col_header\" style={{ width: '50%' }}>\n                          Internationalized Resource Identifiers\n                        </th>\n                        <th className=\"col_header\" style={{ width: '20%' }}>\n                          level\n                        </th>\n                        <th className=\"col_header\">Name</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {principles.map((principle) => (\n                        <Principle\n                          key={principle.iri}\n                          name={principle.name}\n                          iri={principle.iri}\n                          level={principle.level}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPrinciples.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectPrinciplesCount: PropTypes.func.isRequired,\n    selectPrinciples: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Principles;\n","import PropTypes from 'prop-types';\n\nconst Principle = ({ name, iri, level }) => {\n  return (\n    <tr>\n      <td>\n        <span className=\"property-primitivetype\">{iri}</span>\n      </td>\n      <td>\n        <span className=\"prop-type\">{level}</span>\n      </td>\n      <td>{name}</td>\n    </tr>\n  );\n};\n\nPrinciple.propTypes = {\n  name: PropTypes.string,\n  iri: PropTypes.string.isRequired,\n  level: PropTypes.string.isRequired,\n};\n\nPrinciple.defaultProps = {\n  name: '',\n};\n\nexport default Principle;\n","import PropTypes from 'prop-types';\n\nconst Standards = ({ editorPreviewADSSelectors, getComponent }) => {\n  const standardsCount = editorPreviewADSSelectors.selectStandardsCount();\n  const standards = editorPreviewADSSelectors.selectStandards();\n  const Standard = getComponent('ADSStandard');\n\n  return (\n    <div className=\"no-margin\">\n      <div className=\"opblock opblock-get is-open\">\n        <div className=\"opblock-summary opblock-summary-get\">\n          <span\n            className=\"opblock-summary-method\"\n            style={{ paddingLeft: '6px', paddingRight: '6px' }}\n          >\n            {standardsCount} Standards\n          </span>\n        </div>\n        <div className=\"no-margin\">\n          <div className=\"opblock-body\">\n            <div className=\"opblock-description-wrapper\">\n              <div className=\"opblock-description\">\n                <div className=\"markdown\">\n                  <p>\n                    Standards are industry best practices (e.g. RFCs) that shall influence the rules\n                    for API design.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"opblock-section\">\n              <div className=\"parameters-container\">\n                <div className=\"table-container\">\n                  <table className=\"model ads-principles\">\n                    <thead>\n                      <tr>\n                        <th className=\"col_header\" style={{ width: '50%' }}>\n                          Internationalized Resource Identifiers\n                        </th>\n                        <th className=\"col_header\" style={{ width: '20%' }}>\n                          level\n                        </th>\n                        <th className=\"col_header\">Name</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {standards.map((principle) => (\n                        <Standard\n                          key={principle.iri}\n                          name={principle.name}\n                          iri={principle.iri}\n                          level={principle.level}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStandards.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectStandardsCount: PropTypes.func.isRequired,\n    selectStandards: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Standards;\n","import PropTypes from 'prop-types';\n\nconst Standard = ({ name, iri, level }) => {\n  return (\n    <tr>\n      <td>\n        <span className=\"property-primitivetype\">{iri}</span>\n      </td>\n      <td>\n        <span className=\"prop-type\">{level}</span>\n      </td>\n      <td>{name}</td>\n    </tr>\n  );\n};\n\nStandard.propTypes = {\n  name: PropTypes.string,\n  iri: PropTypes.string.isRequired,\n  level: PropTypes.string.isRequired,\n};\n\nStandard.defaultProps = {\n  name: '',\n};\n\nexport default Standard;\n","import PropTypes from 'prop-types';\n\nconst Scenarios = ({ getComponent, editorPreviewADSSelectors }) => {\n  const scenariosCount = editorPreviewADSSelectors.selectScenariosCount();\n  const scenarios = editorPreviewADSSelectors.selectScenarios();\n  const Scenario = getComponent('ADSScenario', true);\n\n  return (\n    <section className=\"block col-12 block-desktop col-12-desktop\">\n      <section className=\"models is-open\">\n        <h4>\n          <button type=\"button\" aria-expanded=\"true\" className=\"models-control\">\n            <span>{scenariosCount} Governance Scenarios</span>\n            <svg width=\"20\" height=\"20\" aria-hidden=\"true\" focusable=\"false\" />\n          </button>\n        </h4>\n\n        <div className=\"no-margin\">\n          {scenarios.map((scenarioElement) => {\n            const key = editorPreviewADSSelectors.selectStandardIdentifier({\n              standardIdentifier: scenarioElement.when,\n            });\n            return <Scenario key={key} element={scenarioElement} />;\n          })}\n        </div>\n      </section>\n    </section>\n  );\n};\n\nScenarios.propTypes = {\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectScenariosCount: PropTypes.func.isRequired,\n    selectScenarios: PropTypes.func.isRequired,\n    selectStandardIdentifier: PropTypes.func.isRequired,\n  }).isRequired,\n  getComponent: PropTypes.func.isRequired,\n};\n\nexport default Scenarios;\n","import PropTypes from 'prop-types';\nimport { ScenarioElement } from '@swagger-api/apidom-ns-api-design-systems';\n\nconst Scenario = ({ getComponent, editorPreviewADSSelectors, element }) => {\n  const scenarioName = editorPreviewADSSelectors.selectStandardIdentifier({\n    standardIdentifier: element.when,\n  });\n  const description = editorPreviewADSSelectors.selectScenarioDescription({\n    scenarioElement: element,\n  });\n  const requirements = editorPreviewADSSelectors.selectScenarioRequirements({\n    scenarioElement: element,\n  });\n  const Requirement = getComponent('ADSRequirement', true);\n\n  return (\n    <div className=\"modal-container\">\n      <span className=\"model-box\" style={{ display: 'block' }}>\n        <button\n          type=\"button\"\n          aria-expanded=\"false\"\n          className=\"model-box-control\"\n          style={{ width: '100%' }}\n        >\n          <span className=\"pointer\">\n            <span className=\"model-box\">\n              <span className=\"model model-title\">\n                <strong>Scenario: </strong> {scenarioName}\n              </span>\n            </span>\n          </span>\n\n          <div className=\"description\">\n            <div className=\"markdown\">\n              <p>{description}</p>\n            </div>\n          </div>\n\n          <div className=\"table-container\">\n            <table className=\"model\">\n              <thead>\n                <tr>\n                  <th className=\"col_header\" style={{ width: '50%' }}>\n                    Subject\n                  </th>\n                  <th className=\"col_header\">Level</th>\n                  <th className=\"col_header\" style={{ width: '40%' }}>\n                    Values\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {requirements.map((requirementElement, index) => {\n                  // eslint-disable-next-line react/no-array-index-key\n                  return <Requirement key={index} element={requirementElement} />;\n                })}\n              </tbody>\n            </table>\n          </div>\n        </button>\n      </span>\n    </div>\n  );\n};\n\nScenario.propTypes = {\n  element: PropTypes.instanceOf(ScenarioElement).isRequired,\n  getComponent: PropTypes.func.isRequired,\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectStandardIdentifier: PropTypes.func.isRequired,\n    selectScenarioDescription: PropTypes.func.isRequired,\n    selectScenarioRequirements: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Scenario;\n","import PropTypes from 'prop-types';\nimport { RequirementElement } from '@swagger-api/apidom-ns-api-design-systems';\n\nconst Requirement = ({ editorPreviewADSSelectors, element }) => {\n  const subject = editorPreviewADSSelectors.selectStandardIdentifier({\n    standardIdentifier: element.subject,\n  });\n  const level = editorPreviewADSSelectors.selectRequirementLevel({ requirementElement: element });\n  const values = editorPreviewADSSelectors.selectRequirementValues({ requirementElement: element });\n\n  return (\n    <tr className=\"property-row\">\n      <td>{subject}</td>\n      <td>\n        <span className=\"prop-type\">{level}</span>\n      </td>\n      <td>\n        <span className=\"property-primitive\">{values}</span>\n      </td>\n    </tr>\n  );\n};\n\nRequirement.propTypes = {\n  element: PropTypes.instanceOf(RequirementElement).isRequired,\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectStandardIdentifier: PropTypes.func.isRequired,\n    selectRequirementLevel: PropTypes.func.isRequired,\n    selectRequirementValues: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Requirement;\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"useEffect\"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useEffect });","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Parsing = () => <div>Parsing...</div>;\n\nconst EditorPreviewAPIDesignSystems = ({\n  getComponent,\n  editorPreviewADSActions,\n  editorPreviewADSSelectors,\n}) => {\n  const Main = getComponent('ADSMain', true);\n  const ParseErrors = getComponent('EditorPreviewAPIDesignSystemsParseErrors', true);\n  const isParseInProgress = editorPreviewADSSelectors.selectIsParseInProgress();\n  const isParseSuccess = editorPreviewADSSelectors.selectIsParseSuccess();\n  const isParseFailure = editorPreviewADSSelectors.selectIsParseFailure();\n  const parseError = editorPreviewADSSelectors.selectParseError();\n\n  useEffect(() => {\n    return () => {\n      editorPreviewADSActions.previewUnmounted();\n    };\n  }, [editorPreviewADSActions]);\n\n  return (\n    <section className=\"swagger-editor__editor-preview-api-design-systems\">\n      {isParseInProgress && <Parsing />}\n      {isParseSuccess && <Main />}\n      {isParseFailure && <ParseErrors error={parseError} />}\n    </section>\n  );\n};\n\nEditorPreviewAPIDesignSystems.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n  editorPreviewADSActions: PropTypes.shape({\n    previewUnmounted: PropTypes.func.isRequired,\n  }).isRequired,\n  editorPreviewADSSelectors: PropTypes.shape({\n    selectIsParseInProgress: PropTypes.func.isRequired,\n    selectIsParseSuccess: PropTypes.func.isRequired,\n    selectIsParseFailure: PropTypes.func.isRequired,\n    selectParseResult: PropTypes.func.isRequired,\n    selectParseError: PropTypes.func.isRequired,\n    selectMainElement: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default EditorPreviewAPIDesignSystems;\n","import PropTypes from 'prop-types';\n\nconst ParseErrors = ({ error }) => {\n  return (\n    <div className=\"swagger-editor__editor-preview-api-design-systems-parse-errors\">\n      <div className=\"swagger-ui\">\n        <div className=\"version-pragma\">\n          <div className=\"version-pragma__message version-pragma__message--missing\">\n            <div>\n              <h3>Invalid API Design Systems definition.</h3>\n              <p>Please fix the error: {error.message}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nParseErrors.propTypes = {\n  error: PropTypes.shape({ message: PropTypes.string }).isRequired,\n};\n\nexport default ParseErrors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EditorPreviewWrapper = (Original, system) => {\n  const EditorPreview = ({ editorSelectors, getComponent }) => {\n    const EditorPreviewAPIDesignSystems = getComponent('EditorPreviewAPIDesignSystems', true);\n\n    return editorSelectors.selectIsContentTypeAPIDesignSystems() ? (\n      <EditorPreviewAPIDesignSystems />\n    ) : (\n      <Original {...system} /> // eslint-disable-line react/jsx-props-no-spreading\n    );\n  };\n\n  EditorPreview.propTypes = {\n    editorSelectors: PropTypes.oneOfType([\n      PropTypes.shape({\n        selectIsContentTypeAPIDesignSystems: PropTypes.func.isRequired,\n      }),\n    ]).isRequired,\n    getComponent: PropTypes.func.isRequired,\n  };\n\n  return EditorPreview;\n};\n\nexport default EditorPreviewWrapper;\n","import { previewUnmounted, parse, parseStarted, parseSuccess, parseFailure } from './actions.js';\nimport { detectContentTypeSuccess as detectContentTypeSuccessWrap } from './wrap-actions.js';\nimport {\n  selectParseStatus,\n  selectIsParseInProgress,\n  selectIsParseFailure,\n  selectIsParseSuccess,\n  selectParseResult,\n  selectParseError,\n  selectMainElement,\n  selectVersion,\n  selectInfo,\n  selectPrinciplesCount,\n  selectStandardsCount,\n  selectScenariosCount,\n  selectPrinciples,\n  selectStandards,\n  selectScenarios,\n  selectStandardIdentifier,\n  selectScenarioDescription,\n  selectScenarioRequirements,\n  selectRequirementLevel,\n  selectRequirementValues,\n} from './selectors.js';\nimport reducers from './reducers.js';\nimport Main from './components/Main.jsx';\nimport Info from './components/Info.jsx';\nimport Principles from './components/Principles.jsx';\nimport Principle from './components/Principle.jsx';\nimport Standards from './components/Standards.jsx';\nimport Standard from './components/Standard.jsx';\nimport Scenarios from './components/Scenarios.jsx';\nimport Scenario from './components/Scenario.jsx';\nimport Requirement from './components/Requirement.jsx';\nimport EditorPreviewAPIDesignSystems from './components/EditorPreviewAPIDesignSystems.jsx';\nimport ParseErrors from './components/ParseErrors.jsx';\nimport EditorPreviewWrapper from './wrap-components/EditorPreviewWrapper.jsx';\n\nconst EditorPreviewApiDesignSystemsPlugin = () => {\n  return {\n    components: {\n      ADSMain: Main,\n      ADSInfo: Info,\n      ADSPrinciples: Principles,\n      ADSPrinciple: Principle,\n      ADSStandards: Standards,\n      ADSStandard: Standard,\n      ADSScenarios: Scenarios,\n      ADSScenario: Scenario,\n      ADSRequirement: Requirement,\n      EditorPreviewAPIDesignSystems,\n      EditorPreviewAPIDesignSystemsParseErrors: ParseErrors,\n    },\n    wrapComponents: {\n      EditorPreviewPane: EditorPreviewWrapper,\n    },\n    statePlugins: {\n      editor: {\n        wrapActions: {\n          detectContentTypeSuccess: detectContentTypeSuccessWrap,\n        },\n      },\n      editorPreviewADS: {\n        actions: {\n          previewUnmounted,\n\n          parse,\n          parseStarted,\n          parseSuccess,\n          parseFailure,\n        },\n        selectors: {\n          selectParseStatus,\n          selectIsParseInProgress,\n          selectIsParseSuccess,\n          selectIsParseFailure,\n          selectParseResult,\n          selectParseError,\n          selectMainElement,\n          selectVersion,\n          selectInfo,\n          selectPrinciplesCount,\n          selectStandardsCount,\n          selectScenariosCount,\n          selectPrinciples,\n          selectStandards,\n          selectScenarios,\n          selectStandardIdentifier,\n          selectScenarioDescription,\n          selectScenarioRequirements,\n          selectRequirementLevel,\n          selectRequirementValues,\n        },\n        reducers,\n      },\n    },\n  };\n};\n\nexport default EditorPreviewApiDesignSystemsPlugin;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE_short_unique_id_298b54bb__","__WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_parser_adapter_api_design_systems_json_1adf0e52__","parse","__WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_parser_adapter_api_design_systems_yaml_bdee7436__","EDITOR_PREVIEW_ADS_PREVIEW_UNMOUNTED","EDITOR_PREVIEW_ADS_PARSE_STARTED","EDITOR_PREVIEW_ADS_PARSE_SUCCESS","EDITOR_PREVIEW_ADS_PARSE_FAILURE","previewUnmounted","type","parseStarted","content","contentType","requestId","payload","meta","parseSuccess","parseResult","parseFailure","error","parserOptions","uid","ShortUniqueId","length","async","editorPreviewADSActions","system","parseAPIDesignSystemsDefinition","includes","parseJSON","parseYAML","detectContentTypeSuccess","wrapper","lastFSA","origAction","args","fsa","createSafeActionWrapper","oriAction","editorSelectors","selectIsContentTypeAPIDesignSystems","selectContentType","__WEBPACK_EXTERNAL_MODULE_reselect__","createSelector","__WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_core_e136e1a4__","createNamespace","from","isArrayElement","isStringElement","toString","toValue","__WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ns_api_design_systems_8e97df3b__","isInfoElement","isMainElement","isPrincipleElement","isRequirementLevelElement","isScenarioElement","isStandardElement","isStandardIdentifierElement","namespace","IDLE_STATUS","PARSING_STATUS","SUCCESS_STATUS","FAILURE_STATUS","initialState","parseStatus","parseRequestId","parseError","state","parseErrors","merge","parseStartedReducer","action","parseSuccessReducer","status","apiDesignSystemsNamespace","parseFailureReducer","selectState","selectParseResult","selectParseError","selectParseStatus","selectIsParseInProgress","selectIsParseSuccess","selectIsParseFailure","selectMainElement","result","selectVersion","mainElement","version","selectInfo","info","selectPrinciplesCount","principles","selectStandardsCount","standards","selectScenariosCount","scenarios","selectPrinciples","filter","selectStandards","selectScenarios","elements","selectStandardIdentifier","standardIdentifier","String","replaceAll","selectScenarioDescription","scenarioElement","description","selectScenarioRequirements","then","selectRequirementLevel","requirementElement","level","selectRequirementValues","values","__WEBPACK_EXTERNAL_MODULE_react_jsx_runtime_js_fc12ce1a__","jsx","jsxs","Main","getComponent","Info","Principles","Standards","Scenarios","_jsx","className","children","_jsxs","editorPreviewADSSelectors","title","principlesCount","Principle","style","paddingLeft","paddingRight","width","map","principle","name","iri","defaultProps","standardsCount","Standard","scenariosCount","Scenario","height","focusable","when","element","scenarioName","requirements","Requirement","display","index","subject","__WEBPACK_EXTERNAL_MODULE_react__","useEffect","Parsing","EditorPreviewAPIDesignSystems","ParseErrors","isParseInProgress","isParseSuccess","isParseFailure","message","EditorPreviewWrapper","Original","EditorPreview","EditorPreviewApiDesignSystemsPlugin","components","ADSMain","ADSInfo","ADSPrinciples","ADSPrinciple","ADSStandards","ADSStandard","ADSScenarios","ADSScenario","ADSRequirement","EditorPreviewAPIDesignSystemsParseErrors","wrapComponents","EditorPreviewPane","statePlugins","editor","wrapActions","detectContentTypeSuccessWrap","editorPreviewADS","actions","selectors","reducers"],"sourceRoot":""}