import*as e from"react";import*as r from"react/jsx-runtime.js";import*as o from"react-dropzone";var t={d:(e,r)=>{for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r)},s={};t.d(s,{Z:()=>p});const n=(e=>{var r={};return t.d(r,e),r})({useCallback:()=>e.useCallback,useState:()=>e.useState});const a=(e=>{var r={};return t.d(r,e),r})({jsx:()=>r.jsx,jsxs:()=>r.jsxs}),c=({getComponent:e,useDropzone:r,children:o})=>{const t=e("AlertDialog",!0),[s,n,c,l,i,p]=r();return(0,a.jsxs)("div",{className:"dropzone",...i(),children:[(0,a.jsx)(t,{isOpen:n,title:"Uh oh, an error has occurred",onClose:()=>{c(!1)},children:l}),(0,a.jsx)("input",{"data-cy":"dropzone",...p()}),s?(0,a.jsx)("div",{className:"dropzone__overlay",children:"Please drop an OpenAPI 2.0/3.0/3.1 or AsyncApi 2.x definition in .yaml or .json format."}):o]})};const l=(e=>{var r={};return t.d(r,e),r})({useDropzone:()=>o.useDropzone}),i=e=>()=>{const{editorActions:r}=e(),[o,t]=(0,n.useState)(!1),[s,a]=(0,n.useState)(""),c=(0,n.useCallback)((async(e,o)=>{const s=o&&o.length>0,n=e&&1===e.length;try{if(s||!n){a("Sorry, there was an error processing your file.\nPlease drag and drop exactly one file."),t(!0)}else{const o=e[0],t=await o.text();r.setContent(t,"file-drop")}}catch(c){a("Sorry, there was an error processing your file. Unable to process as valid YAML or JSON "),t(!0)}}),[r,a,t]),{getRootProps:i,getInputProps:p,isDragActive:d}=(0,l.useDropzone)({onDrop:c,multiple:!1,noClick:!0});return[d,o,t,s,i,p]},p=({getSystem:e})=>({rootInjects:{useDropzone:i(e)},components:{Dropzone:c}});var d=s.Z;export{d as default};
//# sourceMappingURL=index.js.map