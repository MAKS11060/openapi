{"version":3,"file":"plugins/editor-content-persistence/index.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,sBCMlF,MCJaI,EDIoBC,KAC/B,IAAIC,EAAU,KAEd,MAAO,CAACC,EAAYC,IAClB,IAAIC,KACF,MAAMC,EAAMH,KAAcE,GAE1B,OAAIC,IAAQJ,IAIZD,EAAQE,EAAYC,EAApBH,IAA+BI,GAE/BH,EAAUI,GALDA,CAOC,CACX,ECpBqBC,EAAwB,CAACC,EAAWJ,IAAYK,IACxE,MAAM,yBAAEC,GAA6BN,EAErCM,EAAyBC,IAAIF,EAAQ,IAS1BG,EAAWA,CAACJ,EAAWJ,IAAYK,IAC9C,MAAM,yBAAEC,GAA6BN,EAEhCM,EAAyBG,OAC5BL,EAAUC,EACZ,ECnBIK,EAAc,8BAMPC,EAAuBA,IAC3BC,aAAaC,QAAQH,GCAjBJ,EAA2B,CACtCG,IAAGA,IDG+B,OAA3BE,ICAPJ,IAAIO,GDT6BA,IAC1BF,aAAaG,QAAQL,EAAaI,GCShCE,CAAmBF,GAE5BxB,IAAGA,IACMqB,KCHX,EAZmBX,IACjB,MAAM,yBAAEM,EAAwB,cAAEW,EAAa,gBAAEC,GAAoBlB,EAE/DmB,EAAmBb,EAAyBhB,MACT,OAArB6B,GAGhBD,EAAgBE,kBAAoBD,GAExCF,EAAcrB,WAAWuB,EAAkB,gBAAgB,ECgB7D,EArBuCE,KAC9B,CACLC,UAAS,EACTC,YAAa,CACXjB,yBACF,GACAkB,aAAc,CACZC,KAAM,CACJC,YAAa,CACXlB,SAAUmB,IAGdC,OAAQ,CACNF,YAAa,CACX9B,WAAYiC,O","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","utils/create-safe-action-wrapper.js","plugins/editor-content-persistence/wrap-actions.js","plugins/editor-content-persistence/layers/local-storage.js","plugins/editor-content-persistence/root-injects.js","plugins/editor-content-persistence/after-load.js","plugins/editor-content-persistence/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Creates action wrapper that avoids double dispatch.\n *\n * @param wrapper\n * @returns {function(*, *): function(...[*]): (*)}\n */\nconst createSafeActionWrapper = (wrapper) => {\n  let lastFSA = null; // Flux Standard Action(FSA): action objects emitted through redux\n\n  return (origAction, system) =>\n    (...args) => {\n      const fsa = origAction(...args);\n\n      if (fsa === lastFSA) {\n        return fsa;\n      }\n\n      wrapper(origAction, system)(...args);\n\n      lastFSA = fsa;\n\n      return fsa;\n    };\n};\n\nexport default createSafeActionWrapper;\n","import createSafeActionWrapper from '../../utils/create-safe-action-wrapper.js';\n\nexport const setContent = createSafeActionWrapper((oriAction, system) => (content) => {\n  const { editorContentPersistence } = system;\n\n  editorContentPersistence.set(content);\n});\n\n/**\n * When given a SwaggerUI config prop `url`,\n * before `download` of new content as specified by `url`,\n * check if active content already exists in localStorage.\n */\n\nexport const download = (oriAction, system) => (content) => {\n  const { editorContentPersistence } = system;\n\n  if (!editorContentPersistence.has()) {\n    oriAction(content);\n  }\n};\n","const STORAGE_KEY = 'swagger-editor-next-content';\n\nexport const saveToLocalStorage = (value) => {\n  return localStorage.setItem(STORAGE_KEY, value);\n};\n\nexport const loadFromLocalStorage = () => {\n  return localStorage.getItem(STORAGE_KEY);\n};\n\nexport const hasLocalStorage = () => {\n  return loadFromLocalStorage() !== null;\n};\n","import {\n  hasLocalStorage,\n  saveToLocalStorage,\n  loadFromLocalStorage,\n} from './layers/local-storage.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const editorContentPersistence = {\n  has() {\n    return hasLocalStorage();\n  },\n  set(value) {\n    return saveToLocalStorage(value);\n  },\n  get() {\n    return loadFromLocalStorage();\n  },\n};\n","const afterLoad = (system) => {\n  const { editorContentPersistence, editorActions, editorSelectors } = system;\n\n  const contentPersisted = editorContentPersistence.get();\n  const isPersisted = contentPersisted !== null;\n\n  if (!isPersisted) return; // nothing persisted\n  if (editorSelectors.selectContent() === contentPersisted) return; // content already persisted\n\n  editorActions.setContent(contentPersisted, 'local-storage');\n};\n\nexport default afterLoad;\n","import { setContent as setContentWrap, download as downloadWrap } from './wrap-actions.js';\nimport { editorContentPersistence } from './root-injects.js';\nimport afterLoad from './after-load.js';\n\nconst EditorContentPersistencePlugin = () => {\n  return {\n    afterLoad,\n    rootInjects: {\n      editorContentPersistence,\n    },\n    statePlugins: {\n      spec: {\n        wrapActions: {\n          download: downloadWrap,\n        },\n      },\n      editor: {\n        wrapActions: {\n          setContent: setContentWrap,\n        },\n      },\n    },\n  };\n};\n\nexport default EditorContentPersistencePlugin;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","setContent","wrapper","lastFSA","origAction","system","args","fsa","createSafeActionWrapper","oriAction","content","editorContentPersistence","set","download","has","STORAGE_KEY","loadFromLocalStorage","localStorage","getItem","value","setItem","saveToLocalStorage","editorActions","editorSelectors","contentPersisted","selectContent","EditorContentPersistencePlugin","afterLoad","rootInjects","statePlugins","spec","wrapActions","downloadWrap","editor","setContentWrap"],"sourceRoot":""}