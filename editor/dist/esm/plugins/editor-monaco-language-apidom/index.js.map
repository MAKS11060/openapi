{"version":3,"file":"plugins/editor-monaco-language-apidom/index.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","../external module \"monaco-editor\"","../external module \"vscode\"","../external module \"vscode/vscode/vs/editor/common/languages/modesRegistry\"","plugins/editor-monaco-language-apidom/language/apidom.js","../external module \"vscode-languageclient/lib/common/codeConverter.js\"","../external module \"vscode-languageclient/lib/common/protocolConverter.js\"","plugins/editor-monaco-language-apidom/language/WorkerManager.js","plugins/editor-monaco-language-apidom/language/providers/Provider.js","plugins/editor-monaco-language-apidom/language/providers/DiagnosticsProvider.js","plugins/editor-monaco-language-apidom/language/providers/HoverProvider.js","plugins/editor-monaco-language-apidom/language/providers/DocumentLinkProvider.js","plugins/editor-monaco-language-apidom/language/providers/CompletionItemProvider.js","plugins/editor-monaco-language-apidom/language/providers/DocumentSemanticTokensProvider.js","plugins/editor-monaco-language-apidom/language/providers/CodeActionsProvider.js","plugins/editor-monaco-language-apidom/language/providers/DocumentSymbolProvider.js","plugins/editor-monaco-language-apidom/language/providers/DefinitionProvider.js","plugins/editor-monaco-language-apidom/language/apidom-mode.js","../external module \"js-yaml\"","plugins/editor-monaco-language-apidom/language/actions/dereference.js","plugins/editor-monaco-language-apidom/language/monaco.contribution.js","plugins/editor-monaco-language-apidom/after-load.js","plugins/editor-monaco-language-apidom/actions/get-json-pointer-position.js","plugins/editor-monaco-language-apidom/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","function _classPrivateFieldBase(e, t) {\n  if (!{}.hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n  return e;\n}\nexport { _classPrivateFieldBase as default };","var id = 0;\nfunction _classPrivateFieldKey(e) {\n  return \"__private_\" + id++ + \"_\" + e;\n}\nexport { _classPrivateFieldKey as default };","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"editor\"]: () => __WEBPACK_EXTERNAL_MODULE_monaco_editor_23647bbd__.editor, [\"languages\"]: () => __WEBPACK_EXTERNAL_MODULE_monaco_editor_23647bbd__.languages });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"languages\"]: () => __WEBPACK_EXTERNAL_MODULE_vscode__.languages });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"ModesRegistry\"]: () => __WEBPACK_EXTERNAL_MODULE_vscode_vscode_vs_editor_common_languages_modesRegistry_28e080de__.ModesRegistry });","import * as monaco from 'monaco-editor';\n\nexport const languageId = 'apidom';\n\nexport const conf = {\n  comments: {\n    lineComment: '#',\n  },\n  brackets: [\n    ['{', '}'],\n    ['[', ']'],\n    ['(', ')'],\n  ],\n  autoClosingPairs: [\n    { open: '{', close: '}' },\n    { open: '[', close: ']' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  surroundingPairs: [\n    { open: '{', close: '}' },\n    { open: '[', close: ']' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n\n  onEnterRules: [\n    {\n      beforeText: /:\\s*$/,\n      action: { indentAction: monaco.languages.IndentAction.Indent },\n    },\n    {\n      beforeText: /-\\s+\\w*$/,\n      action: { indentAction: monaco.languages.IndentAction.None, appendText: '- ' },\n    },\n    {\n      beforeText: /-\\s*$/,\n      action: { indentAction: monaco.languages.IndentAction.None, appendText: '- ' },\n    },\n  ],\n};\n\nexport const language = {\n  // set defaultToken to invalid to see what you do not tokenize yet\n  defaultToken: 'invalid',\n  keywords: ['swagger', 'info', 'host', 'basePath', 'tags', 'schemes', 'paths', 'externalDocs'],\n  typeKeywords: ['description', 'title', 'termsOfService'],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // the main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            '@keywords': { token: 'keyword' },\n            '@typeKeywords': { token: 'type' },\n            '@default': 'identifier',\n          },\n        },\n      ],\n      // whitespace\n      { include: '@whitespace' },\n      // strings for todos\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // non-terminated string\n      [/\"/, 'string', '@string'],\n    ],\n    whitespace: [[/[ \\t\\r\\n]+/, '']],\n    string: [\n      [/[^\\\\\"]+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/\"/, 'string', '@pop'],\n    ],\n  },\n};\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createConverter\"]: () => __WEBPACK_EXTERNAL_MODULE_vscode_languageclient_lib_common_codeConverter_js_b2d3adcf__.createConverter });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"createConverter\"]: () => __WEBPACK_EXTERNAL_MODULE_vscode_languageclient_lib_common_protocolConverter_js_779c1346__.createConverter });","import * as monaco from 'monaco-editor';\n\nconst STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\n\nexport default class WorkerManager {\n  #defaults = null;\n\n  #worker = null;\n\n  #client = null;\n\n  #idleCheckInterval;\n\n  #lastUsedTime = 0;\n\n  constructor(defaults) {\n    this.#defaults = defaults;\n    this.#idleCheckInterval = setInterval(() => this.#checkIfIdle(), 30 * 1000);\n  }\n\n  #stopWorker() {\n    if (this.#worker) {\n      this.#worker.dispose();\n      this.#worker = null;\n    }\n    this.#client = null;\n  }\n\n  #checkIfIdle() {\n    if (!this.#worker) {\n      return;\n    }\n\n    const timePassedSinceLastUsed = Date.now() - this.#lastUsedTime;\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this.#stopWorker();\n    }\n  }\n\n  async #getClient() {\n    this.#lastUsedTime = Date.now();\n\n    if (!this.#client) {\n      this.#worker = monaco.editor.createWebWorker({\n        moduleId: 'ApiDOMWorker',\n        label: this.#defaults.getLanguageId(),\n        createData: {\n          ...this.#defaults.getWorkerOptions().data,\n          languageId: this.#defaults.getLanguageId(),\n          apiDOMContext: this.#defaults.getWorkerOptions().apiDOMContext,\n          customWorkerPath: this.#defaults.getWorkerOptions().customWorkerPath,\n        },\n      });\n\n      this.#client = this.#worker.getProxy();\n    }\n    return this.#client;\n  }\n\n  async getLanguageServiceWorker(...resources) {\n    const client = await this.#getClient();\n    await this.#worker.withSyncedResources(resources);\n    return client;\n  }\n\n  dispose() {\n    clearInterval(this.#idleCheckInterval);\n    this.#stopWorker();\n  }\n}\n","class Provider {\n  #worker;\n\n  #codeConverter;\n\n  #protocolConverter;\n\n  constructor(worker, codeConverter, protocolConverter) {\n    this.#worker = worker;\n    this.#codeConverter = codeConverter;\n    this.#protocolConverter = protocolConverter;\n  }\n\n  get worker() {\n    return this.#worker;\n  }\n\n  get codeConverter() {\n    return this.#codeConverter;\n  }\n\n  get protocolConverter() {\n    return this.#protocolConverter;\n  }\n\n  dispose() {\n    this.#worker = null;\n    this.#codeConverter = null;\n    this.#protocolConverter = null;\n  }\n}\n\nexport default Provider;\n","import * as monaco from 'monaco-editor';\nimport { languages as vscodeLanguages } from 'vscode';\n\nimport Provider from './Provider.js';\nimport * as apidom from '../apidom.js';\n\nclass DiagnosticsProvider extends Provider {\n  #listener = [];\n\n  #disposables = [];\n\n  #diagnosticCollection = null;\n\n  #system = null;\n\n  constructor(worker, codeConverter, protocolConverter, getSystem) {\n    super(worker, codeConverter, protocolConverter);\n    this.#system = getSystem();\n\n    const onModelAdded = (model) => {\n      if (model.getLanguageId() !== apidom.languageId) {\n        return;\n      }\n\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        /**\n         * Here we are Debouncing the user changes, so everytime a new change is done,\n         * we wait some time before validating, otherwise if the user is still typing, we cancel the change.\n         */\n        clearTimeout(handle);\n        handle = setTimeout(() => this.#validate(model), 300);\n      });\n\n      this.#listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          clearTimeout(handle);\n        },\n      };\n\n      this.#validate(model);\n    };\n\n    const onModelRemoved = (model) => {\n      this.#diagnosticCollection.set(model.uri, []);\n      const key = model.uri.toString();\n      if (this.#listener[key]) {\n        this.#listener[key].dispose();\n        delete this.#listener[key];\n      }\n    };\n\n    const onModelLanguageChanged = (model) => {\n      const key = model.uri.toString();\n      const hasChangedToApiDOM = model.getLanguageId() === apidom.languageId;\n      const isModelSubscribed = !!this.#listener[key];\n\n      if (!isModelSubscribed && hasChangedToApiDOM) {\n        onModelAdded(model);\n      } else if (isModelSubscribed && !hasChangedToApiDOM) {\n        onModelRemoved(model);\n      }\n    };\n\n    const onVscodeInitialized = () => {\n      this.#diagnosticCollection = vscodeLanguages.createDiagnosticCollection(apidom.languageId);\n      return this.#diagnosticCollection;\n    };\n\n    this.#disposables.push(monaco.editor.onDidCreateModel(onModelAdded));\n    this.#disposables.push(monaco.editor.onDidChangeModelLanguage(onModelLanguageChanged));\n    this.#disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n    this.#system.monacoInitializationDeferred().promise.then(() => {\n      this.#disposables.push(onVscodeInitialized());\n    });\n  }\n\n  async #getDiagnostics(model) {\n    const worker = await this.worker(model.uri);\n\n    if (model.isDisposed()) {\n      // model was disposed in the meantime\n      return [];\n    }\n\n    try {\n      return await worker.doValidation(model.uri.toString());\n    } catch {\n      return [];\n    }\n  }\n\n  async #validate(model) {\n    const diagnostics = await this.#getDiagnostics(model);\n\n    this.#diagnosticCollection?.set(\n      model.uri,\n      await this.protocolConverter.asDiagnostics(diagnostics)\n    );\n  }\n\n  dispose() {\n    super.dispose();\n    this.#disposables.forEach((disposable) => disposable?.dispose());\n    this.#disposables = [];\n    this.#system = null;\n  }\n}\n\nexport default DiagnosticsProvider;\n","import Provider from './Provider.js';\n\nclass HoverProvider extends Provider {\n  async #getHover(vscodeDocument, position) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.doHover(\n        vscodeDocument.uri.toString(),\n        this.codeConverter.asPosition(position)\n      );\n    } catch {\n      return undefined;\n    }\n  }\n\n  async provideHover(vscodeDocument, position) {\n    const hover = await this.#getHover(vscodeDocument, position);\n\n    return this.protocolConverter.asHover(hover);\n  }\n}\n\nexport default HoverProvider;\n","import Provider from './Provider.js';\n\nclass DocumentLinkProvider extends Provider {\n  async #getLinks(vscodeDocument) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.doLinks(vscodeDocument.uri.toString());\n    } catch {\n      return undefined;\n    }\n  }\n\n  async provideDocumentLinks(vscodeDocument) {\n    const links = await this.#getLinks(vscodeDocument);\n    const linksWithNonEmptyRanges = links.filter(\n      (link) => !this.protocolConverter.asRange(link.range).isEmpty\n    );\n\n    return this.protocolConverter.asDocumentLinks(linksWithNonEmptyRanges);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async resolveDocumentLink(link) {\n    return link;\n  }\n}\n\nexport default DocumentLinkProvider;\n","import Provider from './Provider.js';\n\nclass CompletionItemProvider extends Provider {\n  async #getCompletionList(vscodeDocument, position) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.doComplete(\n        vscodeDocument.uri.toString(),\n        this.codeConverter.asPosition(position)\n      );\n    } catch {\n      return undefined;\n    }\n  }\n\n  async provideCompletionItems(vscodeDocument, position) {\n    const completionList = await this.#getCompletionList(vscodeDocument, position);\n\n    return this.protocolConverter.asCompletionResult(completionList);\n  }\n}\n\nexport default CompletionItemProvider;\n","import Provider from './Provider.js';\n\nclass DocumentSemanticTokensProvider extends Provider {\n  async #getSemanticTokens(vscodeDocument) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.findSemanticTokens(vscodeDocument.uri.toString());\n    } catch {\n      return undefined;\n    }\n  }\n\n  async provideDocumentSemanticTokens(vscodeDocument) {\n    const semanticTokens = await this.#getSemanticTokens(vscodeDocument);\n\n    return this.protocolConverter.asSemanticTokens(semanticTokens);\n  }\n}\n\nexport default DocumentSemanticTokensProvider;\n","import Provider from './Provider.js';\n\nclass CodeActionsProvider extends Provider {\n  async #getCodeActionList(vscodeDocument, diagnosticList) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.doCodeActions(vscodeDocument.uri.toString(), diagnosticList);\n    } catch {\n      return undefined;\n    }\n  }\n\n  #maybeConvert(codeActionList) {\n    if (typeof codeActionList === 'undefined') {\n      return codeActionList;\n    }\n\n    return this.protocolConverter.asCodeActionResult(codeActionList);\n  }\n\n  async provideCodeActions(vscodeDocument, range, ctx) {\n    const diagnosticList = await this.codeConverter.asDiagnostics(ctx.diagnostics);\n    const codeActionList = await this.#getCodeActionList(vscodeDocument, diagnosticList);\n\n    return this.#maybeConvert(codeActionList);\n  }\n}\n\nexport default CodeActionsProvider;\n","import Provider from './Provider.js';\n\nclass DocumentSymbolProvider extends Provider {\n  async #getSymbolInformationList(vscodeDocument) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.findDocumentSymbols(vscodeDocument.uri.toString());\n    } catch {\n      return undefined;\n    }\n  }\n\n  async provideDocumentSymbols(vscodeDocument) {\n    const symbolInformationList = await this.#getSymbolInformationList(vscodeDocument);\n\n    return this.protocolConverter.asSymbolInformations(symbolInformationList);\n  }\n}\n\nexport default DocumentSymbolProvider;\n","import Provider from './Provider.js';\n\nclass DefinitionProvider extends Provider {\n  async #getLocation(vscodeDocument, position) {\n    const worker = await this.worker(vscodeDocument.uri);\n\n    try {\n      return await worker.provideDefinition(\n        vscodeDocument.uri.toString(),\n        this.codeConverter.asPosition(position)\n      );\n    } catch {\n      return undefined;\n    }\n  }\n\n  async provideDefinition(vscodeDocument, position) {\n    const location = await this.#getLocation(vscodeDocument, position);\n\n    return this.protocolConverter.asDefinitionResult(location);\n  }\n}\n\nexport default DefinitionProvider;\n","import { languages as vscodeLanguages } from 'vscode';\nimport { createConverter as createCodeConverter } from 'vscode-languageclient/lib/common/codeConverter.js';\nimport { createConverter as createProtocolConverter } from 'vscode-languageclient/lib/common/protocolConverter.js';\n\nimport WorkerManager from './WorkerManager.js';\nimport DiagnosticsProvider from './providers/DiagnosticsProvider.js';\nimport HoverProvider from './providers/HoverProvider.js';\nimport DocumentLinkProvider from './providers/DocumentLinkProvider.js';\nimport CompletionItemProvider from './providers/CompletionItemProvider.js';\nimport DocumentSemanticTokensProvider from './providers/DocumentSemanticTokensProvider.js';\nimport CodeActionsProvider from './providers/CodeActionsProvider.js';\nimport DocumentSymbolProvider from './providers/DocumentSymbolProvider.js';\nimport DefinitionProvider from './providers/DefinitionProvider.js';\n\nlet apidomWorker;\n\nconst disposeAll = (disposables) => {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n};\n\nconst asDisposable = (disposables) => {\n  return { dispose: () => disposeAll(disposables) };\n};\n\nexport const getWorker = () => {\n  if (!apidomWorker) {\n    throw new Error('ApiDOM not registered');\n  }\n  return apidomWorker;\n};\n\nconst registerProviders = ({ languageId, providers, dependencies }) => {\n  disposeAll(providers);\n\n  const { worker, codeConverter, protocolConverter, getSystem } = dependencies;\n  const args = [worker, codeConverter, protocolConverter];\n  const system = getSystem();\n\n  /**\n   * Customized providers needs to be registered before monaco editor is created.\n   */\n  providers.push(new DiagnosticsProvider(...args, getSystem));\n\n  (async () => {\n    await system.monacoInitializationDeferred().promise;\n\n    providers.push(vscodeLanguages.registerHoverProvider(languageId, new HoverProvider(...args)));\n    providers.push(\n      vscodeLanguages.registerDocumentLinkProvider(languageId, new DocumentLinkProvider(...args))\n    );\n    providers.push(\n      vscodeLanguages.registerCompletionItemProvider(\n        languageId,\n        new CompletionItemProvider(...args)\n      )\n    );\n    providers.push(\n      vscodeLanguages.registerCodeActionsProvider(languageId, new CodeActionsProvider(...args))\n    );\n    providers.push(\n      vscodeLanguages.registerDocumentSymbolProvider(\n        languageId,\n        new DocumentSymbolProvider(...args)\n      )\n    );\n    providers.push(\n      vscodeLanguages.registerDefinitionProvider(languageId, new DefinitionProvider(...args))\n    );\n\n    const workerService = await worker();\n    const semanticTokensLegend = await workerService.getSemanticTokensLegend();\n\n    providers.push(\n      vscodeLanguages.registerDocumentSemanticTokensProvider(\n        languageId,\n        new DocumentSemanticTokensProvider(...args),\n        semanticTokensLegend\n      )\n    );\n  })();\n  system.monacoInitializationDeferred().promise.then(() => {});\n\n  return providers;\n};\n\nexport function setupMode(defaults) {\n  const disposables = [];\n  const providers = [];\n  const codeConverter = createCodeConverter();\n  const protocolConverter = createProtocolConverter(undefined, true, true);\n\n  // setup ApiDOM worker\n  const client = new WorkerManager(defaults);\n  const worker = async (...uris) => client.getLanguageServiceWorker(...uris);\n  apidomWorker = worker;\n  disposables.push({\n    dispose() {\n      apidomWorker = null;\n    },\n  });\n  disposables.push(client);\n\n  /**\n   * Register ApiDOM providers.\n   * We're already assuming here that extensions have\n   * been successfully initialized.\n   */\n  disposables.push(\n    asDisposable(\n      registerProviders({\n        languageId: defaults.getLanguageId(),\n        providers,\n        dependencies: {\n          worker,\n          codeConverter,\n          protocolConverter,\n          getSystem: defaults.getModeConfiguration().getSystem,\n        },\n      })\n    )\n  );\n\n  return asDisposable(disposables);\n}\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"default\"]: () => __WEBPACK_EXTERNAL_MODULE_js_yaml_78384032__[\"default\"] });","import YAML from 'js-yaml';\n\nimport { getWorker } from '../apidom-mode.js';\n\nconst createDereferenceActionDescriptor = ({ getSystem }) => ({\n  id: 'swagger.editor.apidomDereference',\n  label: 'Resolve document',\n  async run(editor) {\n    const system = getSystem();\n    const isContentJSON = system.editorSelectors.selectIsContentFormatJSON();\n    const isContentYAML = system.editorSelectors.selectIsContentFormatYAML();\n\n    if (!isContentJSON && !isContentYAML) return; // nothing to do here\n\n    const model = editor.getModel();\n    const worker = await getWorker()(model.uri);\n    const dereferenced = await worker.doDeref(model.uri.toString(), {\n      baseURI: globalThis.document.baseURI || globalThis.location.href,\n      format: isContentJSON ? 0 : isContentYAML ? 1 : 'unknown',\n    });\n\n    if (isContentYAML) {\n      const nicelyFormattedYAML = YAML.dump(YAML.load(dereferenced));\n      system.editorActions.setContent(nicelyFormattedYAML);\n    } else if (isContentJSON) {\n      system.editorActions.setContent(dereferenced);\n    }\n  },\n});\n\nexport default createDereferenceActionDescriptor;\n","import * as monaco from 'monaco-editor';\nimport { languages as vscodeLanguages } from 'vscode';\nimport { ModesRegistry } from 'vscode/vscode/vs/editor/common/languages/modesRegistry';\n\nimport * as apidom from './apidom.js';\nimport { setupMode } from './apidom-mode.js';\nimport createDereferenceActionDescriptor from './actions/dereference.js';\n\nexport { getWorker } from './apidom-mode.js';\n\nconst modeConfigurationDefault = {};\n\nconst workerOptionsDefault = {\n  customWorkerPath: undefined,\n  data: {},\n};\n\nclass LanguageServiceDefaultsImpl {\n  #languageId;\n\n  #workerOptions;\n\n  #modeConfiguration;\n\n  constructor(workerOptions, modeConfiguration) {\n    this.setLanguageId(apidom.languageId);\n    this.setWorkerOptions(workerOptions);\n    this.setModeConfiguration(modeConfiguration);\n  }\n\n  getLanguageId() {\n    return this.#languageId;\n  }\n\n  setLanguageId(languageId) {\n    this.#languageId = languageId;\n  }\n\n  getWorkerOptions() {\n    return this.#workerOptions;\n  }\n\n  setWorkerOptions(workerOptions) {\n    this.#workerOptions = workerOptions || JSON.parse(JSON.stringify(workerOptionsDefault));\n  }\n\n  getModeConfiguration() {\n    return this.#modeConfiguration;\n  }\n\n  setModeConfiguration(modeConfiguration) {\n    this.#modeConfiguration =\n      modeConfiguration || JSON.parse(JSON.stringify(modeConfigurationDefault));\n  }\n}\n\nexport const apidomDefaults = new LanguageServiceDefaultsImpl(\n  workerOptionsDefault,\n  modeConfigurationDefault\n);\n\nexport const isLanguageRegistered = () => {\n  const languages = ModesRegistry.getLanguages().map(({ id }) => id);\n  return languages.includes(apidom.languageId);\n};\n\nconst lazyMonacoContribution = ({ createData, system }) => {\n  const disposables = [];\n\n  // register apidom language\n  disposables.push(\n    /**\n     * This code uses ModesRegistry API instead of monaco.languages API.\n     * The reason is that monaco.languages API is using ModesRegistry under the hood\n     * but doesn't return disposables produced by ModesRegistry. By using ModesRegistry\n     * directly we're able to obtain disposables.\n     */\n    ModesRegistry.registerLanguage({\n      id: apidom.languageId,\n    })\n  );\n\n  system.monacoInitializationDeferred().promise.then(() => {\n    disposables.push(vscodeLanguages.setLanguageConfiguration(apidom.languageId, apidom.conf));\n  });\n\n  disposables.push(monaco.languages.setMonarchTokensProvider(apidom.languageId, apidom.language));\n\n  // setup apidom mode\n  disposables.push(\n    monaco.editor.onDidCreateEditor(() => {\n      const { customApiDOMWorkerPath: customWorkerPath, apiDOMContext, ...data } = createData;\n      const defaults = new LanguageServiceDefaultsImpl(\n        { apiDOMContext, customWorkerPath, data },\n        { getSystem: system.getSystem }\n      );\n\n      disposables.push(setupMode(defaults));\n    })\n  );\n\n  // setup custom actions\n  disposables.push(\n    monaco.editor.onDidCreateEditor((editor) => {\n      disposables.push(\n        monaco.editor.onDidCreateModel(() => {\n          const dereferenceActionDescriptor = createDereferenceActionDescriptor(system);\n          if (!editor.getAction(dereferenceActionDescriptor.id)) {\n            disposables.push(editor.addAction(dereferenceActionDescriptor));\n          }\n        })\n      );\n    })\n  );\n\n  // disposing of all allocated disposables\n  disposables.push(\n    monaco.editor.onDidCreateEditor((editor) => {\n      disposables.push(\n        editor.onDidDispose(() => {\n          disposables.forEach((disposable) => disposable.dispose());\n          disposables.length = 0;\n        })\n      );\n    })\n  );\n\n  // setup monaco environment\n  globalThis.MonacoEnvironment = {\n    // expect editor-monaco plugin to have already executed\n    ...globalThis.MonacoEnvironment,\n    getWorkerUrl(moduleId, label) {\n      if (label === apidom.languageId) {\n        return new URL(process.env.REACT_APP_APIDOM_WORKER_FILENAME, this.baseUrl).toString();\n      }\n      return new URL(process.env.REACT_APP_EDITOR_WORKER_FILENAME, this.baseUrl).toString();\n    },\n  };\n};\n\nexport default lazyMonacoContribution;\n","import lazyMonacoContribution, {\n  isLanguageRegistered,\n  apidomDefaults,\n} from './language/monaco.contribution.js';\n\nconst makeAfterLoad =\n  ({ createData = {} } = {}) =>\n  (system) => {\n    if (isLanguageRegistered()) return;\n\n    lazyMonacoContribution({ createData, system });\n    system.editorActions.setLanguage(apidomDefaults.getLanguageId());\n  };\n\nexport default makeAfterLoad;\n","export const EDITOR_MONACO_LANGUAGE_APIDOM_GET_JSON_POINTER_POSITION_STARTED =\n  'editor_monaco_language_apidom_get_json_pointer_position_started';\n\nexport const EDITOR_MONACO_LANGUAGE_APIDOM_GET_JSON_POINTER_POSITION_SUCCESS =\n  'editor_monaco_language_apidom_get_json_pointer_position_success';\n\nexport const EDITOR_MONACO_LANGUAGE_APIDOM_GET_JSON_POINTER_POSITION_FAILURE =\n  'editor_monaco_language_apidom_get_json_pointer_position_failure';\n\nexport const getJsonPointerPositionStarted = ({ jsonPointer }) => ({\n  type: EDITOR_MONACO_LANGUAGE_APIDOM_GET_JSON_POINTER_POSITION_STARTED,\n  payload: jsonPointer,\n});\n\nexport const getJsonPointerPositionSuccess = ({ position, jsonPointer }) => ({\n  type: EDITOR_MONACO_LANGUAGE_APIDOM_GET_JSON_POINTER_POSITION_SUCCESS,\n  payload: position,\n  meta: { jsonPointer },\n});\n\nexport const getJsonPointerPositionFailure = ({ error, jsonPointer }) => ({\n  type: EDITOR_MONACO_LANGUAGE_APIDOM_GET_JSON_POINTER_POSITION_FAILURE,\n  error: true,\n  payload: error,\n  meta: { jsonPointer },\n});\n\nexport const getJsonPointerPosition = (jsonPointer) => async (system) => {\n  const { editorActions, editorSelectors, fn } = system;\n\n  editorActions.getJsonPointerPositionStarted({ jsonPointer });\n\n  try {\n    const editor = editorSelectors.selectEditor();\n    const model = editor.getModel();\n    const worker = await fn.getApiDOMWorker()(model.uri);\n    const { line, character } = await worker.getJsonPointerPosition(\n      model.uri.toString(),\n      jsonPointer\n    );\n    const position = { lineNumber: line, column: character - 1 };\n\n    return editorActions.getJsonPointerPositionSuccess({ position, jsonPointer });\n  } catch (error) {\n    return editorActions.getJsonPointerPositionFailure({ error, jsonPointer });\n  }\n};\n","import makeAfterLoad from './after-load.js';\nimport {\n  getJsonPointerPosition,\n  getJsonPointerPositionStarted,\n  getJsonPointerPositionSuccess,\n  getJsonPointerPositionFailure,\n} from './actions/get-json-pointer-position.js';\nimport { getWorker } from './language/monaco.contribution.js';\n\nconst EditorMonacoLanguageApiDOMPlugin = (opts = {}) => {\n  const isCalledWithGetSystem = typeof opts.getSystem === 'function';\n  const options = isCalledWithGetSystem ? {} : opts;\n  const plugin = () => ({\n    afterLoad: makeAfterLoad(options),\n    fn: {\n      getApiDOMWorker: getWorker,\n    },\n    statePlugins: {\n      editor: {\n        actions: {\n          getJsonPointerPosition,\n          getJsonPointerPositionStarted,\n          getJsonPointerPositionSuccess,\n          getJsonPointerPositionFailure,\n        },\n      },\n    },\n  });\n\n  return isCalledWithGetSystem ? plugin(opts) : plugin;\n};\n\nexport default EditorMonacoLanguageApiDOMPlugin;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_classPrivateFieldBase","e","t","TypeError","id","_classPrivateFieldKey","y","x","d","__WEBPACK_EXTERNAL_MODULE_monaco_editor_23647bbd__","editor","languages","__WEBPACK_EXTERNAL_MODULE_vscode__","__WEBPACK_EXTERNAL_MODULE_vscode_vscode_vs_editor_common_languages_modesRegistry_28e080de__","ModesRegistry","languageId","conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","action","indentAction","monaco","IndentAction","Indent","None","appendText","language","defaultToken","keywords","typeKeywords","escapes","tokenizer","root","cases","token","include","whitespace","string","__WEBPACK_EXTERNAL_MODULE_vscode_languageclient_lib_common_codeConverter_js_b2d3adcf__","createConverter","__WEBPACK_EXTERNAL_MODULE_vscode_languageclient_lib_common_protocolConverter_js_779c1346__","_defaults","_classPrivateFieldLooseKey","_worker","_client","_idleCheckInterval","_lastUsedTime","_stopWorker","_checkIfIdle","_getClient","WorkerManager","constructor","defaults","value","_getClient2","_checkIfIdle2","_stopWorker2","writable","_classPrivateFieldLooseBase","this","setInterval","getLanguageServiceWorker","resources","client","withSyncedResources","dispose","clearInterval","Date","now","createWebWorker","moduleId","label","getLanguageId","createData","getWorkerOptions","data","apiDOMContext","customWorkerPath","getProxy","worker","codeConverter","protocolConverter","_codeConverter","_protocolConverter","_listener","_disposables","_diagnosticCollection","_system","_getDiagnostics","_validate","_getDiagnostics2","model","uri","isDisposed","doValidation","toString","_validate2","_classPrivateFieldLoo","diagnostics","set","asDiagnostics","Provider","getSystem","super","onModelAdded","apidom","handle","changeSubscription","onDidChangeContent","clearTimeout","setTimeout","onModelRemoved","onVscodeInitialized","vscodeLanguages","createDiagnosticCollection","push","onDidCreateModel","onDidChangeModelLanguage","hasChangedToApiDOM","isModelSubscribed","onWillDisposeModel","monacoInitializationDeferred","promise","then","forEach","disposable","_getHover","_getHover2","vscodeDocument","position","doHover","asPosition","args","provideHover","hover","asHover","_getLinks","_getLinks2","doLinks","provideDocumentLinks","linksWithNonEmptyRanges","filter","link","asRange","range","isEmpty","asDocumentLinks","resolveDocumentLink","_getCompletionList","_getCompletionList2","doComplete","provideCompletionItems","completionList","asCompletionResult","_getSemanticTokens","_getSemanticTokens2","findSemanticTokens","provideDocumentSemanticTokens","semanticTokens","asSemanticTokens","_getCodeActionList","_maybeConvert","_getCodeActionList2","diagnosticList","doCodeActions","_maybeConvert2","codeActionList","asCodeActionResult","provideCodeActions","ctx","_getSymbolInformationList","_getSymbolInformationList2","findDocumentSymbols","provideDocumentSymbols","symbolInformationList","asSymbolInformations","_getLocation","_getLocation2","provideDefinition","location","asDefinitionResult","apidomWorker","disposeAll","disposables","length","pop","asDisposable","getWorker","Error","setupMode","createCodeConverter","createProtocolConverter","undefined","async","uris","registerProviders","providers","dependencies","system","DiagnosticsProvider","registerHoverProvider","HoverProvider","registerDocumentLinkProvider","DocumentLinkProvider","registerCompletionItemProvider","CompletionItemProvider","registerCodeActionsProvider","CodeActionsProvider","registerDocumentSymbolProvider","DocumentSymbolProvider","registerDefinitionProvider","DefinitionProvider","workerService","semanticTokensLegend","getSemanticTokensLegend","registerDocumentSemanticTokensProvider","DocumentSemanticTokensProvider","getModeConfiguration","__WEBPACK_EXTERNAL_MODULE_js_yaml_78384032__","createDereferenceActionDescriptor","run","isContentJSON","editorSelectors","selectIsContentFormatJSON","isContentYAML","selectIsContentFormatYAML","getModel","dereferenced","doDeref","baseURI","globalThis","document","href","format","nicelyFormattedYAML","YAML","editorActions","setContent","modeConfigurationDefault","workerOptionsDefault","_languageId","_workerOptions","_modeConfiguration","LanguageServiceDefaultsImpl","workerOptions","modeConfiguration","setLanguageId","setWorkerOptions","setModeConfiguration","JSON","parse","stringify","apidomDefaults","lazyMonacoContribution","registerLanguage","setLanguageConfiguration","setMonarchTokensProvider","onDidCreateEditor","customApiDOMWorkerPath","dereferenceActionDescriptor","getAction","addAction","onDidDispose","MonacoEnvironment","getWorkerUrl","URL","process","baseUrl","makeAfterLoad","isLanguageRegistered","getLanguages","map","includes","setLanguage","getJsonPointerPositionStarted","jsonPointer","type","payload","getJsonPointerPositionSuccess","meta","getJsonPointerPositionFailure","error","getJsonPointerPosition","fn","selectEditor","getApiDOMWorker","line","character","lineNumber","column","EditorMonacoLanguageApiDOMPlugin","opts","isCalledWithGetSystem","options","plugin","afterLoad","statePlugins","actions"],"sourceRoot":""}