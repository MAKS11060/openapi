{"version":3,"file":"plugins/dialogs/index.js","mappings":"+DACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,sBCA1EI,KAAO,IAAIC,EAAI,CAAC,EAAGf,EAAoBgB,EAAED,EAAGD,EAAY,EAE3BC,CAAE,CAAG,GCA1C,MAAM,EAFED,KAAO,IAAIC,EAAI,CAAC,EAAgC,OAA7Bf,EAAoBgB,EAAED,EAAGD,GAAWC,CAAC,EAE3B,CAAE,CAAE,IAAS,IAAME,EAA0DC,IAAK,KAAU,IAAMD,EAA0DE,OCC3LC,EAAcA,EAAGC,SAAQC,QAAOC,eAAcC,WAAUC,cAC5D,MAAMC,EAAQH,EAAa,SACrBI,EAAcJ,EAAa,eAC3BK,EAAaL,EAAa,cAC1BM,EAAYN,EAAa,aACzBO,EAAcP,EAAa,eAEjC,OACEQ,EAAAA,EAAAA,MAACL,EAAK,CAACL,OAAQA,EAAQW,aAAcV,EAAME,SAAA,EACzCO,EAAAA,EAAAA,MAACJ,EAAW,CAAAH,SAAA,EACVS,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,UAAU,QAAQC,QAASX,EAAQD,UACvDS,EAAAA,EAAAA,KAAA,QAAM,cAAY,OAAMT,SAAC,SAE3BS,EAAAA,EAAAA,KAACL,EAAU,CAAAJ,SAAEF,QAEfW,EAAAA,EAAAA,KAACJ,EAAS,CAAAL,SAAEA,KACZS,EAAAA,EAAAA,KAACH,EAAW,CAAAN,UACVS,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,UAAU,kBAAkBC,QAASX,EAAQD,SAAC,WAIhE,EAYZJ,EAAYiB,aAAe,CACzBhB,QAAQ,EACRC,MAAO,GACPE,SAAU,KACVC,QAASA,QAGX,UCxCMa,EAAgBA,EAAGjB,SAAQC,QAAOC,eAAcC,WAAUC,cAC9D,MAAMC,EAAQH,EAAa,SACrBI,EAAcJ,EAAa,eAC3BK,EAAaL,EAAa,cAC1BM,EAAYN,EAAa,aACzBO,EAAcP,EAAa,eAYjC,OACEQ,EAAAA,EAAAA,MAACL,EAAK,CAACL,OAAQA,EAAQW,aAAcV,EAAME,SAAA,EACzCO,EAAAA,EAAAA,MAACJ,EAAW,CAAAH,SAAA,EACVS,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,UAAU,QAAQC,QAPrBG,KACvBd,GAAQ,EAAM,EAMwDD,UAChES,EAAAA,EAAAA,KAAA,QAAM,cAAY,OAAMT,SAAC,SAE3BS,EAAAA,EAAAA,KAACL,EAAU,CAAAJ,SAAEF,QAEfW,EAAAA,EAAAA,KAACJ,EAAS,CAAAL,SAAEA,KACZO,EAAAA,EAAAA,MAACD,EAAW,CAAAN,SAAA,EACVS,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,UAAU,oBAAoBC,QAjBhCI,KACxBf,GAAQ,EAAM,EAgBqED,SAAC,YAGhFS,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,UAAU,kBAAkBC,QAvBlCK,KACpBhB,GAAQ,EAAK,EAsBgED,SAAC,YAItE,EAYZc,EAAcD,aAAe,CAC3BhB,QAAQ,EACRC,MAAO,GACPE,SAAU,KACVC,QAASA,QAGX,UCrCA,EAPsBiB,KAAA,CACpBC,WAAY,CACVvB,YAAW,EACXkB,cACF,K","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../external module \"react\"","../external module \"react/jsx-runtime.js\"","plugins/dialogs/components/AlertDialog.jsx","plugins/dialogs/components/ConfirmDialog.jsx","plugins/dialogs/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({  });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"jsx\"]: () => __WEBPACK_EXTERNAL_MODULE_react_jsx_runtime_js_fc12ce1a__.jsx, [\"jsxs\"]: () => __WEBPACK_EXTERNAL_MODULE_react_jsx_runtime_js_fc12ce1a__.jsxs });","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst AlertDialog = ({ isOpen, title, getComponent, children, onClose }) => {\n  const Modal = getComponent('Modal');\n  const ModalHeader = getComponent('ModalHeader');\n  const ModalTitle = getComponent('ModalTitle');\n  const ModalBody = getComponent('ModalBody');\n  const ModalFooter = getComponent('ModalFooter');\n\n  return (\n    <Modal isOpen={isOpen} contentLabel={title}>\n      <ModalHeader>\n        <button type=\"button\" className=\"close\" onClick={onClose}>\n          <span aria-hidden=\"true\">x</span>\n        </button>\n        <ModalTitle>{title}</ModalTitle>\n      </ModalHeader>\n      <ModalBody>{children}</ModalBody>\n      <ModalFooter>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={onClose}>\n          OK\n        </button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nAlertDialog.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  getComponent: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n\nAlertDialog.defaultProps = {\n  isOpen: false,\n  title: '',\n  children: null,\n  onClose: () => {},\n};\n\nexport default AlertDialog;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ConfirmDialog = ({ isOpen, title, getComponent, children, onClose }) => {\n  const Modal = getComponent('Modal');\n  const ModalHeader = getComponent('ModalHeader');\n  const ModalTitle = getComponent('ModalTitle');\n  const ModalBody = getComponent('ModalBody');\n  const ModalFooter = getComponent('ModalFooter');\n\n  const handleOKClick = () => {\n    onClose(true);\n  };\n  const handleCancelClick = () => {\n    onClose(false);\n  };\n  const handleCloseClick = () => {\n    onClose(false);\n  };\n\n  return (\n    <Modal isOpen={isOpen} contentLabel={title}>\n      <ModalHeader>\n        <button type=\"button\" className=\"close\" onClick={handleCloseClick}>\n          <span aria-hidden=\"true\">x</span>\n        </button>\n        <ModalTitle>{title}</ModalTitle>\n      </ModalHeader>\n      <ModalBody>{children}</ModalBody>\n      <ModalFooter>\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleOKClick}>\n          OK\n        </button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nConfirmDialog.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  getComponent: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n\nConfirmDialog.defaultProps = {\n  isOpen: false,\n  title: '',\n  children: null,\n  onClose: () => {},\n};\n\nexport default ConfirmDialog;\n","/**\n * Dialogs inform users about a task and can contain critical information,\n * require decisions, or involve multiple tasks.\n *\n * A Dialog is a type of modal window that appears in front of app content to provide\n * critical information or ask for a decision. Dialogs disable all app functionality when they appear,\n * and remain on screen until confirmed, dismissed, or a required action has been taken. *\n */\n\nimport AlertDialog from './components/AlertDialog.jsx';\nimport ConfirmDialog from './components/ConfirmDialog.jsx';\n\nconst DialogsPlugin = () => ({\n  components: {\n    AlertDialog,\n    ConfirmDialog,\n  },\n});\n\nexport default DialogsPlugin;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE_react_jsx_runtime_js_fc12ce1a__","jsx","jsxs","AlertDialog","isOpen","title","getComponent","children","onClose","Modal","ModalHeader","ModalTitle","ModalBody","ModalFooter","_jsxs","contentLabel","_jsx","type","className","onClick","defaultProps","ConfirmDialog","handleCloseClick","handleCancelClick","handleOKClick","DialogsPlugin","components"],"sourceRoot":""}